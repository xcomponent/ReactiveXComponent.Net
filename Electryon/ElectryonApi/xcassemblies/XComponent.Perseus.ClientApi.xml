<?xml version="1.0"?>
<doc>
  <assembly>
    <name>XComponent.Perseus.ClientApi</name>
  </assembly>
  <members>
    <member name="T:XComponent.Perseus.ManagementApi.ManagementApi">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ManagementApi.Dispose">
      <summary>
            Dispose the Client Api and the communication layer
             </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ManagementApi.OrderDbAccessor_Component">
      <summary>
            This property is used to communicate with OrderDbAccessor
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ManagementApi.UserManagement_Component">
      <summary>
            This property is used to communicate with UserManagement
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ManagementApi.ReportsManager_Component">
      <summary>
            This property is used to communicate with ReportsManager
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ManagementApi.Referential_Component">
      <summary>
            This property is used to communicate with Referential
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ManagementApi.ExchangeManager_Component">
      <summary>
            This property is used to communicate with ExchangeManager
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ManagementApi.CloseConnectionOnDispose">
      <summary>
            The RabbitMq connection is shared by all client Apis instances. 
             <para>When a client Api is disposed,  the RabbitMq thread is destroyed for all instances.</para><para>If you have several instances of your api set this property to false or use the helper ApiInstancesManager ()</para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ManagementApi.PrivateCommunicationIdentifier">
      <summary>
            Use this property to set a specific private topic.
             <para>Warning: The topic should be set before client Api initialization.</para><para>This topic is used to send private events.</para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ManagementApi.TimeOut">
      <summary>
            Set TimeOut (in mms) for retrieving EntryPoint
             <para>Default value is: 10000</para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ManagementApi.CommunicationType">
      <summary>
            Returns the type of communication
             <para>Possible values: BUS, IN_MEMORY, WEB_SOCKET</para></summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.IReportGenerationError_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ReportGenerationError state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.OrderDbAccessor.IReportGenerationError_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.ReportGenerationError_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ReportGenerationError state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.OrderDbAccessor.ReportGenerationError_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.OrderDbAccessor.ReportGenerationError_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ReportGenerationError state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.IGeneratedReport_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of GeneratedReport state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.OrderDbAccessor.IGeneratedReport_StateMachine.GeneratedReport_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.GeneratedReport_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of GeneratedReport state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.OrderDbAccessor.GeneratedReport_StateMachine.GeneratedReport_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.OrderDbAccessor.GeneratedReport_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the GeneratedReport state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.ITradeReportGenerator_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of TradeReportGenerator state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.ITradeReportGenerator_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.ITradeReportGenerator_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.ReportGenerationError,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.ReportGenerationError event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.ITradeReportGenerator_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.GeneratedReport,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.GeneratedReport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.ITradeReportGenerator_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.GetReconReport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.GetReconReport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.ITradeReportGenerator_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.GetOperationsReport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.GetOperationsReport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.ITradeReportGenerator_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.ITradeReportGenerator_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.GeneratedReport,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.GeneratedReport
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.ITradeReportGenerator_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.GetOperationsReport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.GetOperationsReport
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.ITradeReportGenerator_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.GetReconReport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.GetReconReport
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.ITradeReportGenerator_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.ReportGenerationError,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.ReportGenerationError
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.OrderDbAccessor.ITradeReportGenerator_StateMachine.TradeReportGenerator_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of TradeReportGenerator state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.ReportGenerationError,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.ReportGenerationError event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.GeneratedReport,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.GeneratedReport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.GetReconReport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.GetReconReport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.GetOperationsReport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.GetOperationsReport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.GeneratedReport,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.GeneratedReport
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.GetOperationsReport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.GetOperationsReport
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.GetReconReport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.GetReconReport
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.ReportGenerationError,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.ReportGenerationError
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator_StateMachine.TradeReportGenerator_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator.ITradeReportGenerator_State.Refresh(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator.ITradeReportGenerator_State.ReportGenerationError(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.ReportGenerationError,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.ReportGenerationError event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator.ITradeReportGenerator_State.GeneratedReport(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.GeneratedReport,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.GeneratedReport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator.ITradeReportGenerator_State.GetReconReport(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.GetReconReport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.GetReconReport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator.ITradeReportGenerator_State.GetOperationsReport(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.GetOperationsReport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.GetOperationsReport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator.ITradeReportGenerator_State.Refresh(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Refresh transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator.ITradeReportGenerator_State.ReportGenerationError(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the ReportGenerationError transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator.ITradeReportGenerator_State.GeneratedReport(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GeneratedReport transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator.ITradeReportGenerator_State.GetReconReport(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the GetReconReport transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.TradeReportGenerator.ITradeReportGenerator_State.GetOperationsReport(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the GetOperationsReport transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of OrderDbAccessor state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.Up_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor.OrderDbAccessor_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of OrderDbAccessor state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.OrderDbAccessor.OrderDbAccessor_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.OrderDbAccessor.OrderDbAccessor_StateMachine.Up_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserManagement_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of UserManagement state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.OpenSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.OpenSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Ping,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Ping event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Error event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.Error event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.OpenSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.OpenSession event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.Ping,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Ping event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IUserManagement_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IUserManagement_StateMachine.UserManagementUp_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IUserManagement_StateMachine.UserManagementDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IUserManagement_StateMachine.Initializing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IUserManagement_StateMachine.WaitingForXCapp_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserManagement_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of UserManagement state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.OpenSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.OpenSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Ping,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Ping event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Error event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.Error event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.OpenSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.OpenSession event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.Ping,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Ping event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.UserManagement_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.UserManagement_StateMachine.UserManagementUp_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.UserManagement_StateMachine.UserManagementDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.UserManagement_StateMachine.Initializing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.UserManagement_StateMachine.WaitingForXCapp_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.UserManagement.UserManagement_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the UserManagement state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserManagement.IUserManagementUp_State.Error(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserManagement.IUserManagementUp_State.OpenSession(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.OpenSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.OpenSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserManagement.IUserManagementUp_State.Ping(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Ping,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Ping event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserManagement.IUserManagementUp_State.Error(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Error transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserManagement.IUserManagementUp_State.OpenSession(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the OpenSession transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserManagement.IUserManagementUp_State.Ping(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Ping transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of UserSession state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.DoManagingAction,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.DoManagingAction event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.ChangingPassword,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangingPassword event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.CloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CloseSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetPermissionsSnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetPermissionsSnapshot event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.CustomRightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CustomRightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.ChangePassword,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangePassword event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.ClientSessionHeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ClientSessionHeartBeat event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.InnerCloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.InnerCloseSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.SessionUpdated,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionUpdated event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetUserRightHistory,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserRightHistory event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetSessionRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetUserEntity,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserEntity event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetSessionRequestByDbId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequestByDbId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.BackendInfo,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.BackendInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetBackendInfo,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetBackendInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">XComponent.Common.Event.DefaultEvent event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.BackendInfo,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.BackendInfo event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.ChangePassword,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangePassword event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.ChangingPassword,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangingPassword event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.ClientSessionHeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ClientSessionHeartBeat event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.CloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CloseSession event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.CustomRightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CustomRightRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.DoManagingAction,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.DoManagingAction event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetBackendInfo,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetBackendInfo event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetPermissionsSnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetPermissionsSnapshot event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetSessionRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetSessionRequestByDbId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequestByDbId event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetUserEntity,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserEntity event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetUserRightHistory,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserRightHistory event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.InnerCloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.InnerCloseSession event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.SessionUpdated,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionUpdated event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.SessionUpdated event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SessionUp_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.AccessDenied_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SessionDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SessionDisposed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IUserSession_StateMachine.SessionAlreadyOppenned_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of UserSession state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.DoManagingAction,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.DoManagingAction event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.ChangingPassword,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangingPassword event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.CloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CloseSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetPermissionsSnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetPermissionsSnapshot event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.CustomRightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CustomRightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.ChangePassword,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangePassword event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.ClientSessionHeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ClientSessionHeartBeat event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.InnerCloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.InnerCloseSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.SessionUpdated,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionUpdated event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetUserRightHistory,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserRightHistory event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetSessionRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetUserEntity,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserEntity event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetSessionRequestByDbId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequestByDbId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.BackendInfo,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.BackendInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetBackendInfo,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetBackendInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">XComponent.Common.Event.DefaultEvent event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.BackendInfo,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.BackendInfo event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.ChangePassword,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangePassword event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.ChangingPassword,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangingPassword event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.ClientSessionHeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ClientSessionHeartBeat event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.CloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CloseSession event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.CustomRightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CustomRightRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.DoManagingAction,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.DoManagingAction event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetBackendInfo,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetBackendInfo event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetPermissionsSnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetPermissionsSnapshot event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetSessionRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetSessionRequestByDbId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequestByDbId event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetUserEntity,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserEntity event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetUserRightHistory,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserRightHistory event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.InnerCloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.InnerCloseSession event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.SessionUpdated,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionUpdated event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.SessionUpdated event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SessionUp_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.AccessDenied_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SessionDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SessionDisposed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.SessionAlreadyOppenned_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.UserManagement.UserSession_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the UserSession state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.SessionTimeOut(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.DoManagingAction(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.DoManagingAction,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.DoManagingAction event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.PasswordChanged(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.ChangingPassword,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangingPassword event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.CloseSession(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.CloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CloseSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.GetPermissionsSnapshot(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetPermissionsSnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetPermissionsSnapshot event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.CustomRightRequest(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.CustomRightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CustomRightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.ChangePassword(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.ChangePassword,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangePassword event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.ClientSessionHeartBeat(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.ClientSessionHeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ClientSessionHeartBeat event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.InnerCloseSession(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.InnerCloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.InnerCloseSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.SessionUpdated(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.SessionUpdated,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionUpdated event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.GetUserRightHistory(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetUserRightHistory,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserRightHistory event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.RightRequest(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.GetSessionRequest(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetSessionRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.GetUserEntity(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetUserEntity,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserEntity event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.GetSessionRequestByDbId(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetSessionRequestByDbId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequestByDbId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.GetMarketDataAccessHistorySnapshot(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.PublishBackendInfo(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.BackendInfo,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.BackendInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.GetBackendInfo(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetBackendInfo,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetBackendInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.SessionTimeOut(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the SessionTimeOut transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.DoManagingAction(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the DoManagingAction transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.PasswordChanged(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the PasswordChanged transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.CloseSession(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the CloseSession transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.GetPermissionsSnapshot(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetPermissionsSnapshot transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.CustomRightRequest(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the CustomRightRequest transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.ChangePassword(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the ChangePassword transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.ClientSessionHeartBeat(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the ClientSessionHeartBeat transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.InnerCloseSession(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the InnerCloseSession transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.SessionUpdated(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the SessionUpdated transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.GetUserRightHistory(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetUserRightHistory transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.RightRequest(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the RightRequest transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.GetSessionRequest(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetSessionRequest transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.GetUserEntity(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetUserEntity transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.GetSessionRequestByDbId(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetSessionRequestByDbId transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.GetMarketDataAccessHistorySnapshot(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetMarketDataAccessHistorySnapshot transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.PublishBackendInfo(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the PublishBackendInfo transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserSession.ISessionUp_State.GetBackendInfo(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the GetBackendInfo transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IManagingAction_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ManagingAction state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IManagingAction_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IManagingAction_StateMachine.ActionDenied_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IManagingAction_StateMachine.Executing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IManagingAction_StateMachine.Done_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IManagingAction_StateMachine.ActionError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IManagingAction_StateMachine.ActionDeniedFinal_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.ManagingAction_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ManagingAction state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.ManagingAction_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.ManagingAction_StateMachine.ActionDenied_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.ManagingAction_StateMachine.Executing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.ManagingAction_StateMachine.Done_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.ManagingAction_StateMachine.ActionError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.ManagingAction_StateMachine.ActionDeniedFinal_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.UserManagement.ManagingAction_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ManagingAction state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IGetRight_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of GetRight state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IGetRight_StateMachine.Analyzing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IGetRight_StateMachine.Denied_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IGetRight_StateMachine.Granted_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.GetRight_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of GetRight state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.GetRight_StateMachine.Analyzing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.GetRight_StateMachine.Denied_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.GetRight_StateMachine.Granted_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.UserManagement.GetRight_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the GetRight state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.ICachedPermissionChecker_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of CachedPermissionChecker state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.ICachedPermissionChecker_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.CachedPermissionChecker_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of CachedPermissionChecker state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.CachedPermissionChecker_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.UserManagement.CachedPermissionChecker_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the CachedPermissionChecker state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IPermissionsSnapshot_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of PermissionsSnapshot state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IPermissionsSnapshot_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IPermissionsSnapshot_StateMachine.Denied_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IPermissionsSnapshot_StateMachine.Snapshot_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.PermissionsSnapshot_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of PermissionsSnapshot state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.PermissionsSnapshot_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.PermissionsSnapshot_StateMachine.Denied_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.PermissionsSnapshot_StateMachine.Snapshot_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.UserManagement.PermissionsSnapshot_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the PermissionsSnapshot state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IUserRightHistory_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of UserRightHistory state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IUserRightHistory_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IUserRightHistory_StateMachine.History_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IUserRightHistory_StateMachine.Denied_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.UserRightHistory_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of UserRightHistory state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.UserRightHistory_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.UserRightHistory_StateMachine.History_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.UserRightHistory_StateMachine.Denied_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.UserManagement.UserRightHistory_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the UserRightHistory state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.IMarketDataAccessHistorySnapshot_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of MarketDataAccessHistorySnapshot state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IMarketDataAccessHistorySnapshot_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IMarketDataAccessHistorySnapshot_StateMachine.History_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.IMarketDataAccessHistorySnapshot_StateMachine.Denied_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement.MarketDataAccessHistorySnapshot_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of MarketDataAccessHistorySnapshot state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.MarketDataAccessHistorySnapshot_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.MarketDataAccessHistorySnapshot_StateMachine.History_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement.MarketDataAccessHistorySnapshot_StateMachine.Denied_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.UserManagement.MarketDataAccessHistorySnapshot_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the MarketDataAccessHistorySnapshot state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager.IReportsList_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ReportsList state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager.IReportsList_StateMachine.CheckingPermission_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager.IReportsList_StateMachine.ReportsList_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager.IReportsList_StateMachine.ListDenied_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager.ReportsList_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ReportsList state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager.ReportsList_StateMachine.CheckingPermission_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager.ReportsList_StateMachine.ReportsList_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager.ReportsList_StateMachine.ListDenied_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.ReportsManager.ReportsList_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ReportsList state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager.IReportUpdate_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ReportUpdate state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager.IReportUpdate_StateMachine.CheckingPermission_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager.IReportUpdate_StateMachine.ReportUpdated_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager.IReportUpdate_StateMachine.UpdateDenied_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager.ReportUpdate_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ReportUpdate state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager.ReportUpdate_StateMachine.CheckingPermission_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager.ReportUpdate_StateMachine.ReportUpdated_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager.ReportUpdate_StateMachine.UpdateDenied_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.ReportsManager.ReportUpdate_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ReportUpdate state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager.IReportsManager_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ReportsManager state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager.IReportsManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ReportsManager.UserObject.GetReportsList,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ReportsManager.UserObject.GetReportsList event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager.IReportsManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ReportsManager.UserObject.UpdateReport,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ReportsManager.UserObject.UpdateReport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager.IReportsManager_StateMachine.SendEvent(XComponent.ReportsManager.UserObject.GetReportsList,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ReportsManager.UserObject.GetReportsList
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager.IReportsManager_StateMachine.SendEvent(XComponent.ReportsManager.UserObject.UpdateReport,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ReportsManager.UserObject.UpdateReport
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager.IReportsManager_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager.IReportsManager_StateMachine.ReportsManagerUp_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager.ReportsManager_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ReportsManager state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager.ReportsManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ReportsManager.UserObject.GetReportsList,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ReportsManager.UserObject.GetReportsList event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager.ReportsManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ReportsManager.UserObject.UpdateReport,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ReportsManager.UserObject.UpdateReport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager.ReportsManager_StateMachine.SendEvent(XComponent.ReportsManager.UserObject.GetReportsList,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ReportsManager.UserObject.GetReportsList
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager.ReportsManager_StateMachine.SendEvent(XComponent.ReportsManager.UserObject.UpdateReport,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ReportsManager.UserObject.UpdateReport
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager.ReportsManager_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager.ReportsManager_StateMachine.ReportsManagerUp_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager.ReportsManager.IReportsManagerUp_State.GetReportsList(XComponent.Common.ApiContext.Context,XComponent.ReportsManager.UserObject.GetReportsList,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.ReportsManager.UserObject.GetReportsList event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager.ReportsManager.IReportsManagerUp_State.UpdateReport(XComponent.Common.ApiContext.Context,XComponent.ReportsManager.UserObject.UpdateReport,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.ReportsManager.UserObject.UpdateReport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager.ReportsManager.IReportsManagerUp_State.GetReportsList(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetReportsList transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager.ReportsManager.IReportsManagerUp_State.UpdateReport(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the UpdateReport transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Referential state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.HeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.HeartBeat event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.CustomInstrumentRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CustomInstrumentRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.CreateInstrument,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CreateInstrument event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.MultiFieldsQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.MultiFieldsQuery event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.DoQuickSearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.DoQuickSearch event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ImportReferentialFromCsv,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ImportReferentialFromCsv event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Import,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Import event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetAllInstruments,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetAllInstruments event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Referential.UserObject.CreateInstrument,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CreateInstrument event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.CreateInstrument event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Referential.UserObject.CustomInstrumentRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CustomInstrumentRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Referential.UserObject.DoQuickSearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.DoQuickSearch event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Referential.UserObject.GetAllInstruments,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetAllInstruments event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Referential.UserObject.HeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.HeartBeat event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Referential.UserObject.Import,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Import event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Referential.UserObject.ImportReferentialFromCsv,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ImportReferentialFromCsv event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.ImportReferentialFromCsv event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Referential.UserObject.MultiFieldsQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.MultiFieldsQuery event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.LoadingReferential_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.ReferentialUp_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.RefrentialDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.RegisterSession_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.WaitForUserManagement_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.Init_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IReferential_StateMachine.Importing_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Referential state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.HeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.HeartBeat event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.CustomInstrumentRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CustomInstrumentRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.CreateInstrument,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CreateInstrument event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.MultiFieldsQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.MultiFieldsQuery event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.DoQuickSearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.DoQuickSearch event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ImportReferentialFromCsv,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ImportReferentialFromCsv event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Import,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Import event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetAllInstruments,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetAllInstruments event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.SendEvent(XComponent.Referential.UserObject.CreateInstrument,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CreateInstrument event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.CreateInstrument event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.SendEvent(XComponent.Referential.UserObject.CustomInstrumentRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CustomInstrumentRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.SendEvent(XComponent.Referential.UserObject.DoQuickSearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.DoQuickSearch event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.SendEvent(XComponent.Referential.UserObject.GetAllInstruments,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetAllInstruments event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.SendEvent(XComponent.Referential.UserObject.HeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.HeartBeat event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.SendEvent(XComponent.Referential.UserObject.Import,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Import event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.SendEvent(XComponent.Referential.UserObject.ImportReferentialFromCsv,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ImportReferentialFromCsv event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.ImportReferentialFromCsv event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.SendEvent(XComponent.Referential.UserObject.MultiFieldsQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.MultiFieldsQuery event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.LoadingReferential_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.ReferentialUp_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.RefrentialDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.RegisterSession_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.WaitForUserManagement_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.Init_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.Importing_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.Referential.Referential_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the Referential state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential.IReferentialUp_State.HeartBeatRequest(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.HeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.HeartBeat event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential.IReferentialUp_State.CustomInstrumentRequest(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.CustomInstrumentRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.CustomInstrumentRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential.IReferentialUp_State.CreateInstrument(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.CreateInstrument,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.CreateInstrument event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential.IReferentialUp_State.MultiFieldsQuery(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.MultiFieldsQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.MultiFieldsQuery event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential.IReferentialUp_State.DoQuickSearch(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.DoQuickSearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.DoQuickSearch event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential.IReferentialUp_State.StartCsvImport(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ImportReferentialFromCsv,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ImportReferentialFromCsv event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential.IReferentialUp_State.Import(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Import,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Import event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential.IReferentialUp_State.GetAllInstruments(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetAllInstruments,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetAllInstruments event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential.IReferentialUp_State.HeartBeatRequest(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the HeartBeatRequest transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential.IReferentialUp_State.CustomInstrumentRequest(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the CustomInstrumentRequest transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential.IReferentialUp_State.CreateInstrument(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the CreateInstrument transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential.IReferentialUp_State.MultiFieldsQuery(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the MultiFieldsQuery transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential.IReferentialUp_State.DoQuickSearch(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the DoQuickSearch transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential.IReferentialUp_State.StartCsvImport(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the StartCsvImport transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential.IReferentialUp_State.Import(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Import transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.Referential.IReferentialUp_State.GetAllInstruments(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetAllInstruments transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of FinancialInstrument state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Referential,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Referential event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetFromType,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromType event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetFromId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Update,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Update event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetFromIsin,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromIsin event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.IsValid,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.IsValid event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Done,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Done event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Down,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Down event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Done,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Done event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Down,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Down event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.Error event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.Error event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.GetFromId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromId event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.GetFromIsin,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromIsin event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.GetFromType,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromType event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.IsValid,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.IsValid event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Referential,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Referential event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Update,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Update event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.Update event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.GetRight event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.RightRequest event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.Instrument_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.Cleared_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.InstrumentCreationError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.CheckingCreationRight_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.CreationRefused_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.InstrumentInvalid_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.CheckingUpdateAuthorisation_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.InstrumentCreation_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IFinancialInstrument_StateMachine.Finalization_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of FinancialInstrument state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Referential,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Referential event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetFromType,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromType event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetFromId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Update,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Update event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetFromIsin,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromIsin event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.IsValid,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.IsValid event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Done,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Done event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Down,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Down event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Done,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Done event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Down,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Down event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.Error event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.Error event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.GetFromId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromId event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.GetFromIsin,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromIsin event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.GetFromType,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromType event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.IsValid,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.IsValid event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Referential,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Referential event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Update,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Update event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.Update event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.GetRight event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.RightRequest event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.Instrument_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.Cleared_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.InstrumentCreationError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.CheckingCreationRight_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.CreationRefused_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.InstrumentInvalid_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.CheckingUpdateAuthorisation_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.InstrumentCreation_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.Finalization_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the FinancialInstrument state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrument_State.Clear(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Referential,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Referential event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrument_State.GetInstrumentsFromType(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetFromType,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromType event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrument_State.GetInstrumentFromId(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetFromId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrument_State.Update(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Update,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Update event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrument_State.GetInstrumentFromIsin(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetFromIsin,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromIsin event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrument_State.Clear(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Clear transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrument_State.GetInstrumentsFromType(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetInstrumentsFromType transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrument_State.GetInstrumentFromId(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetInstrumentFromId transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrument_State.Update(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Update transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrument_State.GetInstrumentFromIsin(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetInstrumentFromIsin transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.ICheckingCreationRight_State.Granted(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.ICheckingCreationRight_State.Denied(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.ICheckingCreationRight_State.RightRequest(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.ICheckingCreationRight_State.Granted(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Granted transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.ICheckingCreationRight_State.Denied(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Denied transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.ICheckingCreationRight_State.RightRequest(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the RightRequest transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.ICreationRefused_State.Collect(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.ICreationRefused_State.Collect(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Collect transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrumentInvalid_State.Update(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Update,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Update event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrumentInvalid_State.IsValid(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.IsValid,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.IsValid event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrumentInvalid_State.Error(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrumentInvalid_State.Update(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Update transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrumentInvalid_State.IsValid(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the IsValid transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrumentInvalid_State.Error(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the Error transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.ICheckingUpdateAuthorisation_State.Denied(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.ICheckingUpdateAuthorisation_State.Granted(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.ICheckingUpdateAuthorisation_State.RightRequest(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.ICheckingUpdateAuthorisation_State.Denied(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Denied transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.ICheckingUpdateAuthorisation_State.Granted(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Granted transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.ICheckingUpdateAuthorisation_State.RightRequest(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the RightRequest transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrumentCreation_State.Done(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Done,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Done event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrumentCreation_State.InstrumentCreationError(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Down,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Down event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrumentCreation_State.Error(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrumentCreation_State.Done(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Done transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrumentCreation_State.InstrumentCreationError(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the InstrumentCreationError transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.FinancialInstrument.IInstrumentCreation_State.Error(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the Error transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IInstrumentRequest_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of InstrumentRequest state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IInstrumentRequest_StateMachine.Processed_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.InstrumentRequest_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of InstrumentRequest state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.InstrumentRequest_StateMachine.Processed_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.Referential.InstrumentRequest_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the InstrumentRequest state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IReferentialImport_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ReferentialImport state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IReferentialImport_StateMachine.Importing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IReferentialImport_StateMachine.Done_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IReferentialImport_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IReferentialImport_StateMachine.Timeout_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ReferentialImport_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ReferentialImport state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.ReferentialImport_StateMachine.Importing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.ReferentialImport_StateMachine.Done_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.ReferentialImport_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.ReferentialImport_StateMachine.Timeout_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.Referential.ReferentialImport_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ReferentialImport state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IImportSourceError_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ImportSourceError state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IImportSourceError_StateMachine.ImportSourceError_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportSourceError_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ImportSourceError state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.ImportSourceError_StateMachine.ImportSourceError_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.Referential.ImportSourceError_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ImportSourceError state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IExchangeReferentialImport_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeReferentialImport state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IExchangeReferentialImport_StateMachine.Importing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IExchangeReferentialImport_StateMachine.Completed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IExchangeReferentialImport_StateMachine.Init_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IExchangeReferentialImport_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IExchangeReferentialImport_StateMachine.Finalized_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IExchangeReferentialImport_StateMachine.Canceled_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IExchangeReferentialImport_StateMachine.PartiallyCompleted_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ExchangeReferentialImport_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeReferentialImport state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.ExchangeReferentialImport_StateMachine.Importing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.ExchangeReferentialImport_StateMachine.Completed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.ExchangeReferentialImport_StateMachine.Init_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.ExchangeReferentialImport_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.ExchangeReferentialImport_StateMachine.Finalized_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.ExchangeReferentialImport_StateMachine.Canceled_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.ExchangeReferentialImport_StateMachine.PartiallyCompleted_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.Referential.ExchangeReferentialImport_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ExchangeReferentialImport state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IImportManager_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ImportManager state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IImportManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Referential.ExchangeInfo,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IImportManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Referential.ExchangeReferentialImport,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeReferentialImport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IImportManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ExchangeImportDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.ExchangeImportDescriptor event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IImportManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ReferentialImport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ReferentialImport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IImportManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.CsvImportDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CsvImportDescriptor event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IImportManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ImportReferentialFromCsv,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ImportReferentialFromCsv event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IImportManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ForcedExchangeImportDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.ForcedExchangeImportDescriptor event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IImportManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ForceExchangeIntegration,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ForceExchangeIntegration event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IImportManager_StateMachine.SendEvent(PerseusLib.Common.Dto.Referential.ExchangeInfo,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeInfo event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IImportManager_StateMachine.SendEvent(PerseusLib.Common.Dto.Referential.ExchangeReferentialImport,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeReferentialImport event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IImportManager_StateMachine.SendEvent(XComponent.Referential.UserObject.CsvImportDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CsvImportDescriptor event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IImportManager_StateMachine.SendEvent(XComponent.Referential.UserObject.ExchangeImportDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.ExchangeImportDescriptor event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IImportManager_StateMachine.SendEvent(XComponent.Referential.UserObject.ForcedExchangeImportDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.ForcedExchangeImportDescriptor event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IImportManager_StateMachine.SendEvent(XComponent.Referential.UserObject.ForceExchangeIntegration,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ForceExchangeIntegration event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IImportManager_StateMachine.SendEvent(XComponent.Referential.UserObject.ImportReferentialFromCsv,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ImportReferentialFromCsv event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.IImportManager_StateMachine.SendEvent(XComponent.Referential.UserObject.ReferentialImport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ReferentialImport event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.IImportManager_StateMachine.Running_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ImportManager state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Referential.ExchangeInfo,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Referential.ExchangeReferentialImport,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeReferentialImport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ExchangeImportDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.ExchangeImportDescriptor event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ReferentialImport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ReferentialImport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.CsvImportDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CsvImportDescriptor event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ImportReferentialFromCsv,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ImportReferentialFromCsv event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ForcedExchangeImportDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.ForcedExchangeImportDescriptor event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ForceExchangeIntegration,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ForceExchangeIntegration event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.SendEvent(PerseusLib.Common.Dto.Referential.ExchangeInfo,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeInfo event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.SendEvent(PerseusLib.Common.Dto.Referential.ExchangeReferentialImport,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeReferentialImport event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.SendEvent(XComponent.Referential.UserObject.CsvImportDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CsvImportDescriptor event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.SendEvent(XComponent.Referential.UserObject.ExchangeImportDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.ExchangeImportDescriptor event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.SendEvent(XComponent.Referential.UserObject.ForcedExchangeImportDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.ForcedExchangeImportDescriptor event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.SendEvent(XComponent.Referential.UserObject.ForceExchangeIntegration,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ForceExchangeIntegration event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.SendEvent(XComponent.Referential.UserObject.ImportReferentialFromCsv,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ImportReferentialFromCsv event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.SendEvent(XComponent.Referential.UserObject.ReferentialImport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ReferentialImport event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.Running_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.Referential.ImportManager_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ImportManager state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager.IRunning_State.EnqueueExchange(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Referential.ExchangeInfo,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager.IRunning_State.DequeueExchange(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Referential.ExchangeReferentialImport,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeReferentialImport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager.IRunning_State.StartExchangeImport(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ExchangeImportDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.ExchangeImportDescriptor event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager.IRunning_State.DequeueCsv(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ReferentialImport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ReferentialImport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager.IRunning_State.StartCsvImport(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.CsvImportDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.CsvImportDescriptor event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager.IRunning_State.EnqueueCsv(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ImportReferentialFromCsv,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ImportReferentialFromCsv event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager.IRunning_State.SendExchangeQuery(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ForcedExchangeImportDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.ForcedExchangeImportDescriptor event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager.IRunning_State.ForceExchangeImport(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ForceExchangeIntegration,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ForceExchangeIntegration event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager.IRunning_State.EnqueueExchange(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the EnqueueExchange transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager.IRunning_State.DequeueExchange(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the DequeueExchange transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager.IRunning_State.StartExchangeImport(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the StartExchangeImport transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager.IRunning_State.DequeueCsv(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the DequeueCsv transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager.IRunning_State.StartCsvImport(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the StartCsvImport transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager.IRunning_State.EnqueueCsv(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the EnqueueCsv transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager.IRunning_State.SendExchangeQuery(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the SendExchangeQuery transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ImportManager.IRunning_State.ForceExchangeImport(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the ForceExchangeImport transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ICsvDirectoryWatcher_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of CsvDirectoryWatcher state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ICsvDirectoryWatcher_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Disable,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Disable event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ICsvDirectoryWatcher_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Enable,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Enable event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ICsvDirectoryWatcher_StateMachine.SendEvent(XComponent.Referential.UserObject.Disable,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Disable event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.ICsvDirectoryWatcher_StateMachine.SendEvent(XComponent.Referential.UserObject.Enable,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Enable event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.ICsvDirectoryWatcher_StateMachine.Initializing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.ICsvDirectoryWatcher_StateMachine.Stopped_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.ICsvDirectoryWatcher_StateMachine.Running_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.ICsvDirectoryWatcher_StateMachine.OnError_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.CsvDirectoryWatcher_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of CsvDirectoryWatcher state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.CsvDirectoryWatcher_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Disable,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Disable event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.CsvDirectoryWatcher_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Enable,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Enable event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.CsvDirectoryWatcher_StateMachine.SendEvent(XComponent.Referential.UserObject.Disable,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Disable event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.CsvDirectoryWatcher_StateMachine.SendEvent(XComponent.Referential.UserObject.Enable,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Enable event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.CsvDirectoryWatcher_StateMachine.Initializing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.CsvDirectoryWatcher_StateMachine.Stopped_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.CsvDirectoryWatcher_StateMachine.Running_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential.CsvDirectoryWatcher_StateMachine.OnError_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.Referential.CsvDirectoryWatcher_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the CsvDirectoryWatcher state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.CsvDirectoryWatcher.IStopped_State.Enable(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Enable,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Enable event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.CsvDirectoryWatcher.IStopped_State.Enable(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Enable transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.CsvDirectoryWatcher.IRunning_State.Disable(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Disable,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Disable event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential.CsvDirectoryWatcher.IRunning_State.Disable(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Disable transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeManager_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeManager state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.PublishInfo,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.PublishInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.HandleLoadingError,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.HandleLoadingError event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.CreateExchange,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.CreateExchange event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Referential.TimeZoneDefinition,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.TimeZoneDefinition event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeManager_StateMachine.SendEvent(PerseusLib.Common.Dto.Referential.TimeZoneDefinition,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.TimeZoneDefinition event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeManager_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">XComponent.Common.Event.DefaultEvent event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeManager_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.CreateExchange,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.CreateExchange event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeManager_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.Error event
            </summary>
      <param name="evt">XComponent.ExchangeManager.UserObject.Error event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeManager_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.HandleLoadingError,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.HandleLoadingError event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeManager_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.PublishInfo,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.PublishInfo event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeManager_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeManager_StateMachine.Loaded_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeManager_StateMachine.LoadingError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeManager_StateMachine.Loading_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeManager_StateMachine.Initialized_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeManager state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.PublishInfo,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.PublishInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.HandleLoadingError,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.HandleLoadingError event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.CreateExchange,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.CreateExchange event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Referential.TimeZoneDefinition,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.TimeZoneDefinition event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.SendEvent(PerseusLib.Common.Dto.Referential.TimeZoneDefinition,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.TimeZoneDefinition event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">XComponent.Common.Event.DefaultEvent event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.CreateExchange,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.CreateExchange event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.Error event
            </summary>
      <param name="evt">XComponent.ExchangeManager.UserObject.Error event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.HandleLoadingError,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.HandleLoadingError event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.PublishInfo,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.PublishInfo event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.Loaded_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.LoadingError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.Loading_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.Initialized_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ExchangeManager state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager.ILoaded_State.PublishError(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager.ILoaded_State.PublishInfo(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.PublishInfo,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.PublishInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager.ILoaded_State.CheckOpenings(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager.ILoaded_State.HandleLoadingError(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.HandleLoadingError,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.HandleLoadingError event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager.ILoaded_State.CreateExchange(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.CreateExchange,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.CreateExchange event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager.ILoaded_State.PublishTimeZone(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Referential.TimeZoneDefinition,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.TimeZoneDefinition event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager.ILoaded_State.PublishError(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the PublishError transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager.ILoaded_State.PublishInfo(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the PublishInfo transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager.ILoaded_State.CheckOpenings(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the CheckOpenings transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager.ILoaded_State.HandleLoadingError(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the HandleLoadingError transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager.ILoaded_State.CreateExchange(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the CreateExchange transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeManager.ILoaded_State.PublishTimeZone(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the PublishTimeZone transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Exchange state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.CheckOpeningTime,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.CheckOpeningTime event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.NotifyOpening,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyOpening event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.UpdateExchange,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.UpdateExchange event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.DisableExchange,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.DisableExchange event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.ExchangeError,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.ExchangeError event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.NotifyLoading,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyLoading event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.NotifyDisabling,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyDisabling event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.ExchangeQuery,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.ExchangeQuery event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.ReplyToQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.ReplyToQuery event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.MidnightChecker,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.MidnightChecker event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.NotifyMidnight,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyMidnight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.CreateChecker,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.CreateChecker event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">XComponent.Common.Event.DefaultEvent event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.GetRight event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.RightRequest event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.CheckOpeningTime,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.CheckOpeningTime event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.CreateChecker,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.CreateChecker event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.DisableExchange,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.DisableExchange event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.ExchangeError,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.ExchangeError event
            </summary>
      <param name="evt">XComponent.ExchangeManager.UserObject.ExchangeError event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.ExchangeQuery,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.ExchangeQuery event
            </summary>
      <param name="evt">XComponent.ExchangeManager.UserObject.ExchangeQuery event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.MidnightChecker,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.MidnightChecker event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.NotifyDisabling,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyDisabling event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.NotifyLoading,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyLoading event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.NotifyMidnight,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyMidnight event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.NotifyOpening,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyOpening event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.ReplyToQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.ReplyToQuery event
            </summary>
      <param name="evt">XComponent.ExchangeManager.UserObject.ReplyToQuery event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.UpdateExchange,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.UpdateExchange event
            </summary>
      <param name="evt">XComponent.ExchangeManager.UserObject.UpdateExchange event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.Loaded_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.CheckingUpdateRights_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.CheckingCreationRigths_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.CreationError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.Disposed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.Creating_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.IExchange_StateMachine.Disabled_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Exchange state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.CheckOpeningTime,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.CheckOpeningTime event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.NotifyOpening,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyOpening event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.UpdateExchange,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.UpdateExchange event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.DisableExchange,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.DisableExchange event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.ExchangeError,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.ExchangeError event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.NotifyLoading,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyLoading event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.NotifyDisabling,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyDisabling event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.ExchangeQuery,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.ExchangeQuery event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.ReplyToQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.ReplyToQuery event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.MidnightChecker,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.MidnightChecker event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.NotifyMidnight,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyMidnight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.CreateChecker,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.CreateChecker event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">XComponent.Common.Event.DefaultEvent event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.GetRight event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.RightRequest event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.CheckOpeningTime,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.CheckOpeningTime event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.CreateChecker,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.CreateChecker event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.DisableExchange,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.DisableExchange event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.ExchangeError,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.ExchangeError event
            </summary>
      <param name="evt">XComponent.ExchangeManager.UserObject.ExchangeError event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.ExchangeQuery,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.ExchangeQuery event
            </summary>
      <param name="evt">XComponent.ExchangeManager.UserObject.ExchangeQuery event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.MidnightChecker,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.MidnightChecker event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.NotifyDisabling,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyDisabling event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.NotifyLoading,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyLoading event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.NotifyMidnight,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyMidnight event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.NotifyOpening,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyOpening event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.ReplyToQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.ReplyToQuery event
            </summary>
      <param name="evt">XComponent.ExchangeManager.UserObject.ReplyToQuery event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.UpdateExchange,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.UpdateExchange event
            </summary>
      <param name="evt">XComponent.ExchangeManager.UserObject.UpdateExchange event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.Loaded_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.CheckingUpdateRights_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.CheckingCreationRigths_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.CreationError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.Disposed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.Creating_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.Disabled_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the Exchange state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.CheckOpeningTime(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.CheckOpeningTime,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.CheckOpeningTime event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.NotifyOpening(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.NotifyOpening,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyOpening event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.UpdateExchange(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.UpdateExchange,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.UpdateExchange event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.Disable(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.DisableExchange,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.DisableExchange event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.PublishError(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.ExchangeError,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.ExchangeError event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.NotifyLoading(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.NotifyLoading,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyLoading event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.NotifyDisabling(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.NotifyDisabling,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyDisabling event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.ExchangeQuery(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.ExchangeQuery,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.ExchangeQuery event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.ReplyToQuery(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.ReplyToQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.ReplyToQuery event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.CheckMidnight(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.MidnightChecker,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.MidnightChecker event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.NotifyMidnight(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.NotifyMidnight,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.NotifyMidnight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.CreateChecker(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.CreateChecker,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.CreateChecker event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.CheckOpeningTime(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the CheckOpeningTime transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.NotifyOpening(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the NotifyOpening transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.UpdateExchange(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the UpdateExchange transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.Disable(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Disable transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.PublishError(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the PublishError transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.NotifyLoading(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the NotifyLoading transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.NotifyDisabling(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the NotifyDisabling transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.ExchangeQuery(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the ExchangeQuery transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.ReplyToQuery(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the ReplyToQuery transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.CheckMidnight(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the CheckMidnight transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.NotifyMidnight(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the NotifyMidnight transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ILoaded_State.CreateChecker(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the CreateChecker transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ICheckingUpdateRights_State.RightRequest(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ICheckingUpdateRights_State.Granted(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ICheckingUpdateRights_State.Denied(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ICheckingUpdateRights_State.CancelUpdate(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ICheckingUpdateRights_State.RightRequest(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the RightRequest transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ICheckingUpdateRights_State.Granted(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Granted transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ICheckingUpdateRights_State.Denied(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Denied transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ICheckingUpdateRights_State.CancelUpdate(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the CancelUpdate transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ICheckingCreationRigths_State.CancelCreation(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ICheckingCreationRigths_State.RightRequest(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ICheckingCreationRigths_State.Denied(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ICheckingCreationRigths_State.Granted(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ICheckingCreationRigths_State.CancelCreation(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the CancelCreation transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ICheckingCreationRigths_State.RightRequest(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the RightRequest transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ICheckingCreationRigths_State.Denied(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Denied transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Exchange.ICheckingCreationRigths_State.Granted(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Granted transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeOpening_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeOpening state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeOpening_StateMachine.Published_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeOpening_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeOpening state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeOpening_StateMachine.Published_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeOpening_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ExchangeOpening state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IError_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Error state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.IError_StateMachine.Occured_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.Error_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Error state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.Error_StateMachine.Occured_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.ExchangeManager.Error_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the Error state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeError_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeError state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeError_StateMachine.Publish_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeError_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeError state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeError_StateMachine.Publish_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeError_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ExchangeError state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeLoading_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeLoading state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeLoading_StateMachine.Loaded_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeLoading_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeLoading state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeLoading_StateMachine.Loaded_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeLoading_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ExchangeLoading state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ITimeZone_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of TimeZone state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.ITimeZone_StateMachine.Loaded_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.ITimeZone_StateMachine.Disposed_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.TimeZone_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of TimeZone state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.TimeZone_StateMachine.Loaded_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.TimeZone_StateMachine.Disposed_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.ExchangeManager.TimeZone_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the TimeZone state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeDisabling_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeDisabling state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.IExchangeDisabling_StateMachine.Published_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeDisabling_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeDisabling state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeDisabling_StateMachine.Published_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.ManagementApi.ExchangeManager.ExchangeDisabling_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ExchangeDisabling state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.IOrderDbAccessor_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the OrderDbAccessor component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IOrderDbAccessor_Component.ReportGenerationError_StateMachine">
      <summary>
            This property is used to communicate with ReportGenerationError state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IOrderDbAccessor_Component.GeneratedReport_StateMachine">
      <summary>
            This property is used to communicate with GeneratedReport state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IOrderDbAccessor_Component.TradeReportGenerator_StateMachine">
      <summary>
            This property is used to communicate with TradeReportGenerator state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IOrderDbAccessor_Component.OrderDbAccessor_StateMachine">
      <summary>
            This property is used to communicate with OrderDbAccessor state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.IUserManagement_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the UserManagement component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IUserManagement_Component.UserManagement_StateMachine">
      <summary>
            This property is used to communicate with UserManagement state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IUserManagement_Component.UserSession_StateMachine">
      <summary>
            This property is used to communicate with UserSession state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IUserManagement_Component.ManagingAction_StateMachine">
      <summary>
            This property is used to communicate with ManagingAction state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IUserManagement_Component.GetRight_StateMachine">
      <summary>
            This property is used to communicate with GetRight state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IUserManagement_Component.CachedPermissionChecker_StateMachine">
      <summary>
            This property is used to communicate with CachedPermissionChecker state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IUserManagement_Component.PermissionsSnapshot_StateMachine">
      <summary>
            This property is used to communicate with PermissionsSnapshot state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IUserManagement_Component.UserRightHistory_StateMachine">
      <summary>
            This property is used to communicate with UserRightHistory state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IUserManagement_Component.MarketDataAccessHistorySnapshot_StateMachine">
      <summary>
            This property is used to communicate with MarketDataAccessHistorySnapshot state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.IReportsManager_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the ReportsManager component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IReportsManager_Component.ReportsList_StateMachine">
      <summary>
            This property is used to communicate with ReportsList state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IReportsManager_Component.ReportUpdate_StateMachine">
      <summary>
            This property is used to communicate with ReportUpdate state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IReportsManager_Component.ReportsManager_StateMachine">
      <summary>
            This property is used to communicate with ReportsManager state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.IReferential_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the Referential component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IReferential_Component.Referential_StateMachine">
      <summary>
            This property is used to communicate with Referential state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IReferential_Component.FinancialInstrument_StateMachine">
      <summary>
            This property is used to communicate with FinancialInstrument state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IReferential_Component.InstrumentRequest_StateMachine">
      <summary>
            This property is used to communicate with InstrumentRequest state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IReferential_Component.ReferentialImport_StateMachine">
      <summary>
            This property is used to communicate with ReferentialImport state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IReferential_Component.ImportSourceError_StateMachine">
      <summary>
            This property is used to communicate with ImportSourceError state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IReferential_Component.ExchangeReferentialImport_StateMachine">
      <summary>
            This property is used to communicate with ExchangeReferentialImport state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IReferential_Component.ImportManager_StateMachine">
      <summary>
            This property is used to communicate with ImportManager state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IReferential_Component.CsvDirectoryWatcher_StateMachine">
      <summary>
            This property is used to communicate with CsvDirectoryWatcher state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.IExchangeManager_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the ExchangeManager component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IExchangeManager_Component.ExchangeManager_StateMachine">
      <summary>
            This property is used to communicate with ExchangeManager state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IExchangeManager_Component.Exchange_StateMachine">
      <summary>
            This property is used to communicate with Exchange state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IExchangeManager_Component.ExchangeOpening_StateMachine">
      <summary>
            This property is used to communicate with ExchangeOpening state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IExchangeManager_Component.Error_StateMachine">
      <summary>
            This property is used to communicate with Error state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IExchangeManager_Component.ExchangeError_StateMachine">
      <summary>
            This property is used to communicate with ExchangeError state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IExchangeManager_Component.ExchangeLoading_StateMachine">
      <summary>
            This property is used to communicate with ExchangeLoading state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IExchangeManager_Component.TimeZone_StateMachine">
      <summary>
            This property is used to communicate with TimeZone state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.IExchangeManager_Component.ExchangeDisabling_StateMachine">
      <summary>
            This property is used to communicate with ExchangeDisabling state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.OrderDbAccessor_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the OrderDbAccessor component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.OrderDbAccessor_Component.ReportGenerationError_StateMachine">
      <summary>
            This property is used to communicate with ReportGenerationError state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.OrderDbAccessor_Component.GeneratedReport_StateMachine">
      <summary>
            This property is used to communicate with GeneratedReport state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.OrderDbAccessor_Component.TradeReportGenerator_StateMachine">
      <summary>
            This property is used to communicate with TradeReportGenerator state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.OrderDbAccessor_Component.OrderDbAccessor_StateMachine">
      <summary>
            This property is used to communicate with OrderDbAccessor state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.UserManagement_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the UserManagement component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement_Component.UserManagement_StateMachine">
      <summary>
            This property is used to communicate with UserManagement state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement_Component.UserSession_StateMachine">
      <summary>
            This property is used to communicate with UserSession state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement_Component.ManagingAction_StateMachine">
      <summary>
            This property is used to communicate with ManagingAction state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement_Component.GetRight_StateMachine">
      <summary>
            This property is used to communicate with GetRight state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement_Component.CachedPermissionChecker_StateMachine">
      <summary>
            This property is used to communicate with CachedPermissionChecker state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement_Component.PermissionsSnapshot_StateMachine">
      <summary>
            This property is used to communicate with PermissionsSnapshot state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement_Component.UserRightHistory_StateMachine">
      <summary>
            This property is used to communicate with UserRightHistory state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.UserManagement_Component.MarketDataAccessHistorySnapshot_StateMachine">
      <summary>
            This property is used to communicate with MarketDataAccessHistorySnapshot state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ReportsManager_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the ReportsManager component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager_Component.ReportsList_StateMachine">
      <summary>
            This property is used to communicate with ReportsList state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager_Component.ReportUpdate_StateMachine">
      <summary>
            This property is used to communicate with ReportUpdate state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ReportsManager_Component.ReportsManager_StateMachine">
      <summary>
            This property is used to communicate with ReportsManager state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.Referential_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the Referential component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential_Component.Referential_StateMachine">
      <summary>
            This property is used to communicate with Referential state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential_Component.FinancialInstrument_StateMachine">
      <summary>
            This property is used to communicate with FinancialInstrument state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential_Component.InstrumentRequest_StateMachine">
      <summary>
            This property is used to communicate with InstrumentRequest state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential_Component.ReferentialImport_StateMachine">
      <summary>
            This property is used to communicate with ReferentialImport state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential_Component.ImportSourceError_StateMachine">
      <summary>
            This property is used to communicate with ImportSourceError state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential_Component.ExchangeReferentialImport_StateMachine">
      <summary>
            This property is used to communicate with ExchangeReferentialImport state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential_Component.ImportManager_StateMachine">
      <summary>
            This property is used to communicate with ImportManager state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.Referential_Component.CsvDirectoryWatcher_StateMachine">
      <summary>
            This property is used to communicate with CsvDirectoryWatcher state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.ManagementApi.ExchangeManager_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the ExchangeManager component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager_Component.ExchangeManager_StateMachine">
      <summary>
            This property is used to communicate with ExchangeManager state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager_Component.Exchange_StateMachine">
      <summary>
            This property is used to communicate with Exchange state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager_Component.ExchangeOpening_StateMachine">
      <summary>
            This property is used to communicate with ExchangeOpening state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager_Component.Error_StateMachine">
      <summary>
            This property is used to communicate with Error state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager_Component.ExchangeError_StateMachine">
      <summary>
            This property is used to communicate with ExchangeError state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager_Component.ExchangeLoading_StateMachine">
      <summary>
            This property is used to communicate with ExchangeLoading state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager_Component.TimeZone_StateMachine">
      <summary>
            This property is used to communicate with TimeZone state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.ManagementApi.ExchangeManager_Component.ExchangeDisabling_StateMachine">
      <summary>
            This property is used to communicate with ExchangeDisabling state machine
             <para></para></summary>
    </member>
    <member name="T:XComponent.Perseus.UserManagementApi.UserManagementApi">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagementApi.Dispose">
      <summary>
            Dispose the Client Api and the communication layer
             </summary>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagementApi.UserManagement_Component">
      <summary>
            This property is used to communicate with UserManagement
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagementApi.CloseConnectionOnDispose">
      <summary>
            The RabbitMq connection is shared by all client Apis instances. 
             <para>When a client Api is disposed,  the RabbitMq thread is destroyed for all instances.</para><para>If you have several instances of your api set this property to false or use the helper ApiInstancesManager ()</para></summary>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagementApi.PrivateCommunicationIdentifier">
      <summary>
            Use this property to set a specific private topic.
             <para>Warning: The topic should be set before client Api initialization.</para><para>This topic is used to send private events.</para></summary>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagementApi.TimeOut">
      <summary>
            Set TimeOut (in mms) for retrieving EntryPoint
             <para>Default value is: 10000</para></summary>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagementApi.CommunicationType">
      <summary>
            Returns the type of communication
             <para>Possible values: BUS, IN_MEMORY, WEB_SOCKET</para></summary>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of UserManagement state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.OpenSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.OpenSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Ping,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Ping event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.InitializeGetRight,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.InitializeGetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.UserManagement,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.UserManagement event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.UserManagement.RestoreSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the PerseusLib.Common.Dto.UserManagement.RestoreSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetSessionsToRecoverSnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionsToRecoverSnapshot event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.CreateGenerator,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CreateGenerator event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.XcAppMetricsPublisher.UserObject.XcAppHeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.XcAppMetricsPublisher.UserObject.XcAppHeartBeat event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(PerseusLib.Common.Dto.UserManagement.RestoreSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the PerseusLib.Common.Dto.UserManagement.RestoreSession event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.CreateGenerator,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CreateGenerator event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Error event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.Error event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetSessionsToRecoverSnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionsToRecoverSnapshot event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.InitializeGetRight,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.InitializeGetRight event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.OpenSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.OpenSession event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.Ping,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Ping event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.UserManagement,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.UserManagement event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.XcAppMetricsPublisher.UserObject.XcAppHeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.XcAppMetricsPublisher.UserObject.XcAppHeartBeat event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.UserManagementUp_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.UserManagementDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.Initializing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagement.IUserManagement_StateMachine.WaitingForXCapp_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of UserManagement state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.OpenSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.OpenSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Ping,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Ping event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.InitializeGetRight,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.InitializeGetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.UserManagement,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.UserManagement event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.UserManagement.RestoreSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the PerseusLib.Common.Dto.UserManagement.RestoreSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetSessionsToRecoverSnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionsToRecoverSnapshot event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.CreateGenerator,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CreateGenerator event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.XcAppMetricsPublisher.UserObject.XcAppHeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.XcAppMetricsPublisher.UserObject.XcAppHeartBeat event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(PerseusLib.Common.Dto.UserManagement.RestoreSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the PerseusLib.Common.Dto.UserManagement.RestoreSession event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.CreateGenerator,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CreateGenerator event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Error event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.Error event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetSessionsToRecoverSnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionsToRecoverSnapshot event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.InitializeGetRight,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.InitializeGetRight event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.OpenSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.OpenSession event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.Ping,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Ping event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.UserManagement,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.UserManagement event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.XcAppMetricsPublisher.UserObject.XcAppHeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.XcAppMetricsPublisher.UserObject.XcAppHeartBeat event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.UserManagementUp_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.UserManagementDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.Initializing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.WaitingForXCapp_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the UserManagement state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IEntryPoint_State.Init(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IEntryPoint_State.Init(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Init transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IUserManagementUp_State.Error(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IUserManagementUp_State.OpenSession(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.OpenSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.OpenSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IUserManagementUp_State.Ping(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Ping,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Ping event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IUserManagementUp_State.Error(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Error transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IUserManagementUp_State.OpenSession(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the OpenSession transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IUserManagementUp_State.Ping(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Ping transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IInitializing_State.InitializeGetRight(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.InitializeGetRight,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.InitializeGetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IInitializing_State.InitDone(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.UserManagement,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.UserManagement event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IInitializing_State.Error(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IInitializing_State.RestoreSession(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.UserManagement.RestoreSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the PerseusLib.Common.Dto.UserManagement.RestoreSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IInitializing_State.SessionsToRecoverSnapshot(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetSessionsToRecoverSnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionsToRecoverSnapshot event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IInitializing_State.CreateGenerator(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.CreateGenerator,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CreateGenerator event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IInitializing_State.InitializeGetRight(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the InitializeGetRight transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IInitializing_State.InitDone(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the InitDone transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IInitializing_State.Error(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Error transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IInitializing_State.RestoreSession(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the RestoreSession transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IInitializing_State.SessionsToRecoverSnapshot(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the SessionsToRecoverSnapshot transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IInitializing_State.CreateGenerator(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the CreateGenerator transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IWaitingForXCapp_State.XCAppUp(XComponent.Common.ApiContext.Context,XComponent.XcAppMetricsPublisher.UserObject.XcAppHeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.XcAppMetricsPublisher.UserObject.XcAppHeartBeat event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.UserManagement.IWaitingForXCapp_State.XCAppUp(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the XCAppUp transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.ISessionsToRecoverSnapshot_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of SessionsToRecoverSnapshot state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagement.ISessionsToRecoverSnapshot_StateMachine.SessionsToRecoverSnapshot_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement.SessionsToRecoverSnapshot_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of SessionsToRecoverSnapshot state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagement.SessionsToRecoverSnapshot_StateMachine.SessionsToRecoverSnapshot_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.UserManagementApi.UserManagement.SessionsToRecoverSnapshot_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the SessionsToRecoverSnapshot state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.IUserManagement_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the UserManagement component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.IUserManagement_Component.UserManagement_StateMachine">
      <summary>
            This property is used to communicate with UserManagement state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.IUserManagement_Component.SessionsToRecoverSnapshot_StateMachine">
      <summary>
            This property is used to communicate with SessionsToRecoverSnapshot state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.UserManagementApi.UserManagement_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the UserManagement component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagement_Component.UserManagement_StateMachine">
      <summary>
            This property is used to communicate with UserManagement state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.UserManagementApi.UserManagement_Component.SessionsToRecoverSnapshot_StateMachine">
      <summary>
            This property is used to communicate with SessionsToRecoverSnapshot state machine
             <para></para></summary>
    </member>
    <member name="T:XComponent.Perseus.OrderLoadApi.OrderLoadApi">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderLoadApi.Dispose">
      <summary>
            Dispose the Client Api and the communication layer
             </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderLoadApi.OrderManagementSystem_Component">
      <summary>
            This property is used to communicate with OrderManagementSystem
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderLoadApi.CloseConnectionOnDispose">
      <summary>
            The RabbitMq connection is shared by all client Apis instances. 
             <para>When a client Api is disposed,  the RabbitMq thread is destroyed for all instances.</para><para>If you have several instances of your api set this property to false or use the helper ApiInstancesManager ()</para></summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderLoadApi.PrivateCommunicationIdentifier">
      <summary>
            Use this property to set a specific private topic.
             <para>Warning: The topic should be set before client Api initialization.</para><para>This topic is used to send private events.</para></summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderLoadApi.TimeOut">
      <summary>
            Set TimeOut (in mms) for retrieving EntryPoint
             <para>Default value is: 10000</para></summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderLoadApi.CommunicationType">
      <summary>
            Returns the type of communication
             <para>Possible values: BUS, IN_MEMORY, WEB_SOCKET</para></summary>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrder_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Order state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrder_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrder_StateMachine.CheckingFailed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrder_StateMachine.Created_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrder_StateMachine.WaitingForAck_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrder_StateMachine.Pending_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrder_StateMachine.WaitingForModification_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrder_StateMachine.TimedOut_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrder_StateMachine.Canceled_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrder_StateMachine.Rejected_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrder_StateMachine.Executed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrder_StateMachine.Finalized_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrder_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrder_StateMachine.Loading_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrder_StateMachine.Expired_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.Order_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Order state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.Order_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.Order_StateMachine.CheckingFailed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.Order_StateMachine.Created_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.Order_StateMachine.WaitingForAck_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.Order_StateMachine.Pending_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.Order_StateMachine.WaitingForModification_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.Order_StateMachine.TimedOut_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.Order_StateMachine.Canceled_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.Order_StateMachine.Rejected_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.Order_StateMachine.Executed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.Order_StateMachine.Finalized_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.Order_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.Order_StateMachine.Loading_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.Order_StateMachine.Expired_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.Order_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the Order state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.ILoadableOrder_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of LoadableOrder state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.ILoadableOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.FinalizeOrder,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.FinalizeOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.ILoadableOrder_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.FinalizeOrder,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.FinalizeOrder event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.ILoadableOrder_StateMachine.Published_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.ILoadableOrder_StateMachine.Finalized_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.LoadableOrder_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of LoadableOrder state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.LoadableOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.FinalizeOrder,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.FinalizeOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.LoadableOrder_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.FinalizeOrder,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.FinalizeOrder event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.LoadableOrder_StateMachine.Published_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.LoadableOrder_StateMachine.Finalized_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.LoadableOrder_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the LoadableOrder state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.LoadableOrder.IPublished_State.Finalize(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.FinalizeOrder,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.FinalizeOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.LoadableOrder.IPublished_State.Finalize(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Finalize transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of OrderManagementSystem state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.InitOk,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.InitOk event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.InitError,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.InitError event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.OrderLoadNotification,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.OrderLoadNotification event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.LoadOrder,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.LoadOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.PublishOmsSettings,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.PublishOmsSettings event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.LoadableOrder,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.LoadableOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.InitError,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.InitError
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.InitOk,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.InitOk
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.LoadableOrder,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.LoadableOrder
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.LoadOrder,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.LoadOrder
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.OrderLoadNotification,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.OrderLoadNotification
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.PublishOmsSettings,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.PublishOmsSettings
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.Initializing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.Up_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.OnError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.Down_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.ShuttingDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.Disconnected_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of OrderManagementSystem state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.InitOk,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.InitOk event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.InitError,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.InitError event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.OrderLoadNotification,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.OrderLoadNotification event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.LoadOrder,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.LoadOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.PublishOmsSettings,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.PublishOmsSettings event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.LoadableOrder,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.LoadableOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.InitError,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.InitError
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.InitOk,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.InitOk
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.LoadableOrder,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.LoadableOrder
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.LoadOrder,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.LoadOrder
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.OrderLoadNotification,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.OrderLoadNotification
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.PublishOmsSettings,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.PublishOmsSettings
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.Initializing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.Up_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.OnError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.Down_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.ShuttingDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem_StateMachine.Disconnected_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem.IInitializing_State.InitOk(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.InitOk,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.InitOk event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem.IInitializing_State.InitError(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.InitError,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.InitError event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem.IInitializing_State.OrderLoaded(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.OrderLoadNotification,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.OrderLoadNotification event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem.IInitializing_State.LoadOrder(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.LoadOrder,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.LoadOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem.IInitializing_State.PublishOmsSettings(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.PublishOmsSettings,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.PublishOmsSettings event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem.IInitializing_State.CreateLoadableOrder(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.LoadableOrder,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.LoadableOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem.IInitializing_State.InitOk(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the InitOk transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem.IInitializing_State.InitError(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the InitError transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem.IInitializing_State.OrderLoaded(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the OrderLoaded transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem.IInitializing_State.LoadOrder(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the LoadOrder transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem.IInitializing_State.PublishOmsSettings(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the PublishOmsSettings transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem.OrderManagementSystem.IInitializing_State.CreateLoadableOrder(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the CreateLoadableOrder transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.IOrderManagementSystem_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the OrderManagementSystem component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.IOrderManagementSystem_Component.Order_StateMachine">
      <summary>
            This property is used to communicate with Order state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.IOrderManagementSystem_Component.LoadableOrder_StateMachine">
      <summary>
            This property is used to communicate with LoadableOrder state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.IOrderManagementSystem_Component.OrderManagementSystem_StateMachine">
      <summary>
            This property is used to communicate with OrderManagementSystem state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.OrderLoadApi.OrderManagementSystem_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the OrderManagementSystem component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem_Component.Order_StateMachine">
      <summary>
            This property is used to communicate with Order state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem_Component.LoadableOrder_StateMachine">
      <summary>
            This property is used to communicate with LoadableOrder state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.OrderLoadApi.OrderManagementSystem_Component.OrderManagementSystem_StateMachine">
      <summary>
            This property is used to communicate with OrderManagementSystem state machine
             <para></para></summary>
    </member>
    <member name="T:XComponent.Perseus.PerseusApi.PerseusApi">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.PerseusApi.Dispose">
      <summary>
            Dispose the Client Api and the communication layer
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.PerseusApi.OrderDbAccessor_Component">
      <summary>
            This property is used to communicate with OrderDbAccessor
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.PerseusApi.Research_Component">
      <summary>
            This property is used to communicate with Research
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.PerseusApi.UserManagement_Component">
      <summary>
            This property is used to communicate with UserManagement
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.PerseusApi.FeedSource_Component">
      <summary>
            This property is used to communicate with FeedSource
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.PerseusApi.ReferentialFeedSource_Component">
      <summary>
            This property is used to communicate with ReferentialFeedSource
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.PerseusApi.Referential_Component">
      <summary>
            This property is used to communicate with Referential
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.PerseusApi.CheckOrder_Component">
      <summary>
            This property is used to communicate with CheckOrder
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.PerseusApi.Pricer_Component">
      <summary>
            This property is used to communicate with Pricer
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.PerseusApi.OrderManagementSystem_Component">
      <summary>
            This property is used to communicate with OrderManagementSystem
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.PerseusApi.ExchangeManager_Component">
      <summary>
            This property is used to communicate with ExchangeManager
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.PerseusApi.CloseConnectionOnDispose">
      <summary>
            The RabbitMq connection is shared by all client Apis instances. 
             <para>When a client Api is disposed,  the RabbitMq thread is destroyed for all instances.</para><para>If you have several instances of your api set this property to false or use the helper ApiInstancesManager ()</para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.PerseusApi.PrivateCommunicationIdentifier">
      <summary>
            Use this property to set a specific private topic.
             <para>Warning: The topic should be set before client Api initialization.</para><para>This topic is used to send private events.</para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.PerseusApi.TimeOut">
      <summary>
            Set TimeOut (in mms) for retrieving EntryPoint
             <para>Default value is: 10000</para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.PerseusApi.CommunicationType">
      <summary>
            Returns the type of communication
             <para>Possible values: BUS, IN_MEMORY, WEB_SOCKET</para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderSnapshot_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of OrderSnapshot state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderSnapshot_StateMachine.Available_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderSnapshot_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of OrderSnapshot state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderSnapshot_StateMachine.Available_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderSnapshot_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the OrderSnapshot state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.ITradeSnapshot_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of TradeSnapshot state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderDbAccessor.ITradeSnapshot_StateMachine.Available_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.TradeSnapshot_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of TradeSnapshot state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderDbAccessor.TradeSnapshot_StateMachine.Available_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.OrderDbAccessor.TradeSnapshot_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the TradeSnapshot state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.INewTradeAvailable_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of NewTradeAvailable state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderDbAccessor.INewTradeAvailable_StateMachine.Available_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.NewTradeAvailable_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of NewTradeAvailable state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderDbAccessor.NewTradeAvailable_StateMachine.Available_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.OrderDbAccessor.NewTradeAvailable_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the NewTradeAvailable state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrdersTradesSnapshot_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of OrdersTradesSnapshot state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrdersTradesSnapshot_StateMachine.Available_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrdersTradesSnapshot_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of OrdersTradesSnapshot state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrdersTradesSnapshot_StateMachine.Available_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrdersTradesSnapshot_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the OrdersTradesSnapshot state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of OrderDbAccessor state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.UpdateOperationFail,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.UpdateOperationFail event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.OrderSnapshotResult,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrderSnapshotResult event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.OrderSnapshotFail,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrderSnapshotFail event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.TradeSnapshotResult,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeSnapshotResult event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.TradeSnapshotFail,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeSnapshotFail event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Orders.XCOrder,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Orders.XCOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.OrderSnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrderSnapshotRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.TradeSnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeSnapshotRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Orders.Trade,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Orders.Trade event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.TradeAvailable,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeAvailable event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.CreateTradeReportGenerator,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.CreateTradeReportGenerator event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotResult,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotResult event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(PerseusLib.Common.Dto.Orders.Trade,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Orders.Trade
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(PerseusLib.Common.Dto.Orders.XCOrder,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Orders.XCOrder
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.CreateTradeReportGenerator,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.CreateTradeReportGenerator
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.OrderSnapshotFail,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrderSnapshotFail
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.OrderSnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrderSnapshotRequest
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.OrderSnapshotResult,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrderSnapshotResult
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotRequest
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotResult,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotResult
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.TradeAvailable,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeAvailable
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.TradeSnapshotFail,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeSnapshotFail
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.TradeSnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeSnapshotRequest
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.TradeSnapshotResult,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeSnapshotResult
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.UpdateOperationFail,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.UpdateOperationFail
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderDbAccessor.IOrderDbAccessor_StateMachine.Up_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of OrderDbAccessor state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.UpdateOperationFail,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.UpdateOperationFail event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.OrderSnapshotResult,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrderSnapshotResult event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.OrderSnapshotFail,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrderSnapshotFail event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.TradeSnapshotResult,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeSnapshotResult event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.TradeSnapshotFail,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeSnapshotFail event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Orders.XCOrder,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Orders.XCOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.OrderSnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrderSnapshotRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.TradeSnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeSnapshotRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Orders.Trade,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Orders.Trade event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.TradeAvailable,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeAvailable event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.CreateTradeReportGenerator,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.CreateTradeReportGenerator event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotResult,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotResult event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(PerseusLib.Common.Dto.Orders.Trade,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Orders.Trade
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(PerseusLib.Common.Dto.Orders.XCOrder,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Orders.XCOrder
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.CreateTradeReportGenerator,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.CreateTradeReportGenerator
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.OrderSnapshotFail,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrderSnapshotFail
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.OrderSnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrderSnapshotRequest
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.OrderSnapshotResult,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrderSnapshotResult
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotRequest
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotResult,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotResult
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.TradeAvailable,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeAvailable
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.TradeSnapshotFail,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeSnapshotFail
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.TradeSnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeSnapshotRequest
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.TradeSnapshotResult,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeSnapshotResult
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.SendEvent(XComponent.OrderDbAccessor.UserObject.UpdateOperationFail,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.UpdateOperationFail
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor_StateMachine.Up_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.UpdateOperationFailed(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.UpdateOperationFail,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.UpdateOperationFail event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.OrderSnapshotSucceeded(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.OrderSnapshotResult,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrderSnapshotResult event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.OrderSnapshotFailed(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.OrderSnapshotFail,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrderSnapshotFail event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.TradeSnapshotSucceeded(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.TradeSnapshotResult,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeSnapshotResult event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.TradeSnapshotFailed(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.TradeSnapshotFail,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeSnapshotFail event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.UpdateOrder(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Orders.XCOrder,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Orders.XCOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.GetOrderSnapshot(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.OrderSnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrderSnapshotRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.GetTradeSnapshot(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.TradeSnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeSnapshotRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.SaveNewTrade(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Orders.Trade,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Orders.Trade event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.TradeAvailable(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.TradeAvailable,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.TradeAvailable event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.CreateTradeReportGenerator(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.CreateTradeReportGenerator,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.CreateTradeReportGenerator event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.GetOrdersTradesSnapshot(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.OrdersTradesSnapshotSucceeded(XComponent.Common.ApiContext.Context,XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotResult,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.OrderDbAccessor.UserObject.OrdersTradesSnapshotResult event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.UpdateOperationFailed(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the UpdateOperationFailed transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.OrderSnapshotSucceeded(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the OrderSnapshotSucceeded transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.OrderSnapshotFailed(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the OrderSnapshotFailed transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.TradeSnapshotSucceeded(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the TradeSnapshotSucceeded transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.TradeSnapshotFailed(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the TradeSnapshotFailed transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.UpdateOrder(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the UpdateOrder transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.GetOrderSnapshot(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the GetOrderSnapshot transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.GetTradeSnapshot(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the GetTradeSnapshot transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.SaveNewTrade(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the SaveNewTrade transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.TradeAvailable(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the TradeAvailable transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.CreateTradeReportGenerator(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the CreateTradeReportGenerator transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.GetOrdersTradesSnapshot(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the GetOrdersTradesSnapshot transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor.OrderDbAccessor.IUp_State.OrdersTradesSnapshotSucceeded(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the OrdersTradesSnapshotSucceeded transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ResearchCache state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.FindResearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.FindResearch event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.GetResearchEntity,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.GetResearchEntity event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.InitFailed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.InitFailed event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.GetResearchDocument,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.GetResearchDocument event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.SuggestQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.SuggestQuery event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.GetLatestResearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.GetLatestResearch event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.InitOk,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.InitOk event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.SendEvent(XComponent.Research.UserObject.FindResearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.FindResearch event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.SendEvent(XComponent.Research.UserObject.GetLatestResearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.GetLatestResearch event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.SendEvent(XComponent.Research.UserObject.GetResearchDocument,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.GetResearchDocument event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.SendEvent(XComponent.Research.UserObject.GetResearchEntity,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.GetResearchEntity event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.SendEvent(XComponent.Research.UserObject.InitFailed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.InitFailed event
            </summary>
      <param name="evt">XComponent.Research.UserObject.InitFailed event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.SendEvent(XComponent.Research.UserObject.InitOk,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.InitOk event
            </summary>
      <param name="evt">XComponent.Research.UserObject.InitOk event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.SendEvent(XComponent.Research.UserObject.SuggestQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.SuggestQuery event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.EntryPoint_State">
      <summary>
            Research cache entry point
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.Initializing_State">
      <summary>
            Initialize connections to db and external data sources by using the Perseus lib
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.Initialized_State">
      <summary>
            The cache is available to receive queries such as GetLatestResearch or GetResearchDocument
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.IResearchCache_StateMachine.Error_State">
      <summary>
            Init or update failed. Therefore, the research cache is unvailable (error status)
             </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ResearchCache state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.FindResearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.FindResearch event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.GetResearchEntity,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.GetResearchEntity event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.InitFailed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.InitFailed event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.GetResearchDocument,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.GetResearchDocument event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.SuggestQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.SuggestQuery event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.GetLatestResearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.GetLatestResearch event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.InitOk,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.InitOk event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.SendEvent(XComponent.Research.UserObject.FindResearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.FindResearch event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.SendEvent(XComponent.Research.UserObject.GetLatestResearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.GetLatestResearch event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.SendEvent(XComponent.Research.UserObject.GetResearchDocument,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.GetResearchDocument event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.SendEvent(XComponent.Research.UserObject.GetResearchEntity,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.GetResearchEntity event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.SendEvent(XComponent.Research.UserObject.InitFailed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.InitFailed event
            </summary>
      <param name="evt">XComponent.Research.UserObject.InitFailed event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.SendEvent(XComponent.Research.UserObject.InitOk,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.InitOk event
            </summary>
      <param name="evt">XComponent.Research.UserObject.InitOk event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.SendEvent(XComponent.Research.UserObject.SuggestQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Research.UserObject.SuggestQuery event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.EntryPoint_State">
      <summary>
            Research cache entry point
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.Initializing_State">
      <summary>
            Initialize connections to db and external data sources by using the Perseus lib
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.Initialized_State">
      <summary>
            The cache is available to receive queries such as GetLatestResearch or GetResearchDocument
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.Error_State">
      <summary>
            Init or update failed. Therefore, the research cache is unvailable (error status)
             </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.Research.ResearchCache_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ResearchCache state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache.IInitialized_State.FindResearch(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.FindResearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Research.UserObject.FindResearch event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache.IInitialized_State.GetResearchEntity(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.GetResearchEntity,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Research.UserObject.GetResearchEntity event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache.IInitialized_State.CacheDown(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.InitFailed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.InitFailed event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache.IInitialized_State.GetResearchDocument(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.GetResearchDocument,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Research.UserObject.GetResearchDocument event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache.IInitialized_State.SuggestWords(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.SuggestQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Research.UserObject.SuggestQuery event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache.IInitialized_State.GetLatestResearch(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.GetLatestResearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Research.UserObject.GetLatestResearch event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache.IInitialized_State.CacheUpdated(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.InitOk,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.InitOk event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache.IInitialized_State.FindResearch(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the FindResearch transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache.IInitialized_State.GetResearchEntity(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetResearchEntity transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache.IInitialized_State.CacheDown(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the CacheDown transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache.IInitialized_State.GetResearchDocument(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetResearchDocument transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache.IInitialized_State.SuggestWords(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the SuggestWords transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache.IInitialized_State.GetLatestResearch(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetLatestResearch transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchCache.IInitialized_State.CacheUpdated(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the CacheUpdated transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchEntity_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ResearchEntity state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.IResearchEntity_StateMachine.Processing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.IResearchEntity_StateMachine.Processed_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchEntity_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ResearchEntity state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.ResearchEntity_StateMachine.Processing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.ResearchEntity_StateMachine.Processed_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.Research.ResearchEntity_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ResearchEntity state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchDocument_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ResearchDocument state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.IResearchDocument_StateMachine.Get_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchDocument_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ResearchDocument state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.ResearchDocument_StateMachine.Get_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.Research.ResearchDocument_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ResearchDocument state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ICacheUpdater_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of CacheUpdater state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ICacheUpdater_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.RebuildIndex,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.RebuildIndex event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ICacheUpdater_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.Update,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.Update event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ICacheUpdater_StateMachine.SendEvent(XComponent.Research.UserObject.RebuildIndex,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.RebuildIndex event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ICacheUpdater_StateMachine.SendEvent(XComponent.Research.UserObject.Update,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.Update event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.ICacheUpdater_StateMachine.Updating_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.ICacheUpdater_StateMachine.Updated_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.ICacheUpdater_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.ICacheUpdater_StateMachine.BuildingIndex_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.CacheUpdater_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of CacheUpdater state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.CacheUpdater_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.RebuildIndex,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.RebuildIndex event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.CacheUpdater_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.Update,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.Update event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.CacheUpdater_StateMachine.SendEvent(XComponent.Research.UserObject.RebuildIndex,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.RebuildIndex event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.CacheUpdater_StateMachine.SendEvent(XComponent.Research.UserObject.Update,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.Update event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.CacheUpdater_StateMachine.Updating_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.CacheUpdater_StateMachine.Updated_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.CacheUpdater_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.CacheUpdater_StateMachine.BuildingIndex_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.Research.CacheUpdater_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the CacheUpdater state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.CacheUpdater.IUpdated_State.RebuildIndex(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.RebuildIndex,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.RebuildIndex event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.CacheUpdater.IUpdated_State.Update(XComponent.Common.ApiContext.Context,XComponent.Research.UserObject.Update,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Research.UserObject.Update event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.CacheUpdater.IUpdated_State.RebuildIndex(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the RebuildIndex transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.CacheUpdater.IUpdated_State.Update(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Update transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchQuery_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ResearchQuery state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.IResearchQuery_StateMachine.Processing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.IResearchQuery_StateMachine.Processed_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchQuery_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ResearchQuery state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.ResearchQuery_StateMachine.Processing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.ResearchQuery_StateMachine.Processed_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.Research.ResearchQuery_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ResearchQuery state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchSuggestQuery_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ResearchSuggestQuery state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.IResearchSuggestQuery_StateMachine.Suggest_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchSuggestQuery_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ResearchSuggestQuery state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.ResearchSuggestQuery_StateMachine.Suggest_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.Research.ResearchSuggestQuery_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ResearchSuggestQuery state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.IResearchSettings_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ResearchSettings state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.IResearchSettings_StateMachine.Publishing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.IResearchSettings_StateMachine.Disposing_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research.ResearchSettings_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ResearchSettings state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.ResearchSettings_StateMachine.Publishing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research.ResearchSettings_StateMachine.Disposing_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.Research.ResearchSettings_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ResearchSettings state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserManagement_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of UserManagement state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.OpenSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.OpenSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Ping,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Ping event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Error event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.Error event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.OpenSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.OpenSession event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.Ping,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Ping event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IUserManagement_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IUserManagement_StateMachine.UserManagementUp_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IUserManagement_StateMachine.UserManagementDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IUserManagement_StateMachine.Initializing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IUserManagement_StateMachine.WaitingForXCapp_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserManagement_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of UserManagement state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.OpenSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.OpenSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Ping,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Ping event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Error event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.Error event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.OpenSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.OpenSession event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserManagement_StateMachine.SendEvent(XComponent.UserManagement.UserObject.Ping,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Ping event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.UserManagement_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.UserManagement_StateMachine.UserManagementUp_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.UserManagement_StateMachine.UserManagementDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.UserManagement_StateMachine.Initializing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.UserManagement_StateMachine.WaitingForXCapp_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.UserManagement.UserManagement_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the UserManagement state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserManagement.IUserManagementUp_State.Error(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserManagement.IUserManagementUp_State.OpenSession(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.OpenSession,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.OpenSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserManagement.IUserManagementUp_State.Ping(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.Ping,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.Ping event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserManagement.IUserManagementUp_State.Error(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Error transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserManagement.IUserManagementUp_State.OpenSession(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the OpenSession transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserManagement.IUserManagementUp_State.Ping(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Ping transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of UserSession state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.DoManagingAction,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.DoManagingAction event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.ChangingPassword,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangingPassword event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.CloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CloseSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetPermissionsSnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetPermissionsSnapshot event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.CustomRightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CustomRightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.ChangePassword,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangePassword event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.ClientSessionHeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ClientSessionHeartBeat event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.InnerCloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.InnerCloseSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.SessionUpdated,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionUpdated event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetUserRightHistory,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserRightHistory event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetSessionRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetUserEntity,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserEntity event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetSessionRequestByDbId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequestByDbId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.BackendInfo,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.BackendInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetBackendInfo,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetBackendInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">XComponent.Common.Event.DefaultEvent event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.BackendInfo,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.BackendInfo event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.ChangePassword,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangePassword event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.ChangingPassword,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangingPassword event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.ClientSessionHeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ClientSessionHeartBeat event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.CloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CloseSession event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.CustomRightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CustomRightRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.DoManagingAction,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.DoManagingAction event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetBackendInfo,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetBackendInfo event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetPermissionsSnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetPermissionsSnapshot event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetSessionRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetSessionRequestByDbId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequestByDbId event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetUserEntity,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserEntity event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetUserRightHistory,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserRightHistory event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.InnerCloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.InnerCloseSession event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.SessionUpdated,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionUpdated event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.SessionUpdated event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SessionUp_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.AccessDenied_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SessionDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SessionDisposed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IUserSession_StateMachine.SessionAlreadyOppenned_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of UserSession state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.DoManagingAction,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.DoManagingAction event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.ChangingPassword,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangingPassword event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.CloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CloseSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetPermissionsSnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetPermissionsSnapshot event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.CustomRightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CustomRightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.ChangePassword,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangePassword event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.ClientSessionHeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ClientSessionHeartBeat event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.InnerCloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.InnerCloseSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.SessionUpdated,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionUpdated event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetUserRightHistory,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserRightHistory event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetSessionRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetUserEntity,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserEntity event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetSessionRequestByDbId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequestByDbId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.BackendInfo,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.BackendInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetBackendInfo,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetBackendInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">XComponent.Common.Event.DefaultEvent event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.BackendInfo,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.BackendInfo event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.ChangePassword,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangePassword event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.ChangingPassword,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangingPassword event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.ClientSessionHeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ClientSessionHeartBeat event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.CloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CloseSession event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.CustomRightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CustomRightRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.DoManagingAction,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.DoManagingAction event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetBackendInfo,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetBackendInfo event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetPermissionsSnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetPermissionsSnapshot event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetSessionRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetSessionRequestByDbId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequestByDbId event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetUserEntity,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserEntity event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetUserRightHistory,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserRightHistory event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.InnerCloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.InnerCloseSession event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SendEvent(XComponent.UserManagement.UserObject.SessionUpdated,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionUpdated event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.SessionUpdated event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SessionUp_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.AccessDenied_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SessionDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SessionDisposed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.SessionAlreadyOppenned_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.UserManagement.UserSession_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the UserSession state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.SessionTimeOut(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.DoManagingAction(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.DoManagingAction,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.DoManagingAction event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.PasswordChanged(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.ChangingPassword,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangingPassword event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.CloseSession(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.CloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CloseSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.GetPermissionsSnapshot(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetPermissionsSnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetPermissionsSnapshot event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.CustomRightRequest(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.CustomRightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.CustomRightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.ChangePassword(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.ChangePassword,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ChangePassword event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.ClientSessionHeartBeat(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.ClientSessionHeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.ClientSessionHeartBeat event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.InnerCloseSession(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.InnerCloseSession,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.InnerCloseSession event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.SessionUpdated(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.SessionUpdated,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionUpdated event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.GetUserRightHistory(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetUserRightHistory,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserRightHistory event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.RightRequest(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.GetSessionRequest(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetSessionRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.GetUserEntity(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetUserEntity,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetUserEntity event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.GetSessionRequestByDbId(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetSessionRequestByDbId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetSessionRequestByDbId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.GetMarketDataAccessHistorySnapshot(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetMarketDataAccessHistorySnapshot event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.PublishBackendInfo(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.BackendInfo,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.BackendInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.GetBackendInfo(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetBackendInfo,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetBackendInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.SessionTimeOut(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the SessionTimeOut transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.DoManagingAction(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the DoManagingAction transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.PasswordChanged(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the PasswordChanged transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.CloseSession(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the CloseSession transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.GetPermissionsSnapshot(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetPermissionsSnapshot transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.CustomRightRequest(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the CustomRightRequest transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.ChangePassword(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the ChangePassword transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.ClientSessionHeartBeat(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the ClientSessionHeartBeat transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.InnerCloseSession(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the InnerCloseSession transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.SessionUpdated(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the SessionUpdated transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.GetUserRightHistory(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetUserRightHistory transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.RightRequest(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the RightRequest transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.GetSessionRequest(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetSessionRequest transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.GetUserEntity(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetUserEntity transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.GetSessionRequestByDbId(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetSessionRequestByDbId transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.GetMarketDataAccessHistorySnapshot(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetMarketDataAccessHistorySnapshot transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.PublishBackendInfo(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the PublishBackendInfo transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserSession.ISessionUp_State.GetBackendInfo(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the GetBackendInfo transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IGetRight_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of GetRight state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IGetRight_StateMachine.Analyzing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IGetRight_StateMachine.Denied_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IGetRight_StateMachine.Granted_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.GetRight_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of GetRight state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.GetRight_StateMachine.Analyzing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.GetRight_StateMachine.Denied_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.GetRight_StateMachine.Granted_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.UserManagement.GetRight_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the GetRight state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.ICachedPermissionChecker_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of CachedPermissionChecker state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.ICachedPermissionChecker_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.CachedPermissionChecker_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of CachedPermissionChecker state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.CachedPermissionChecker_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.UserManagement.CachedPermissionChecker_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the CachedPermissionChecker state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IChangePassword_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ChangePassword state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IChangePassword_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IChangePassword_StateMachine.Done_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IChangePassword_StateMachine.Refused_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.ChangePassword_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ChangePassword state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.ChangePassword_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.ChangePassword_StateMachine.Done_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.ChangePassword_StateMachine.Refused_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.UserManagement.ChangePassword_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ChangePassword state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IUserEntityInfo_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of UserEntityInfo state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IUserEntityInfo_StateMachine.UserEntityInfo_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.UserEntityInfo_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of UserEntityInfo state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.UserEntityInfo_StateMachine.UserEntityInfo_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.UserManagement.UserEntityInfo_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the UserEntityInfo state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.IBackendInfo_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of BackendInfo state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.IBackendInfo_StateMachine.Publish_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement.BackendInfo_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of BackendInfo state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement.BackendInfo_StateMachine.Publish_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.UserManagement.BackendInfo_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the BackendInfo state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IFeedManager_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of FeedManager state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IFeedManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Retry,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Retry event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IFeedManager_StateMachine.SendEvent(XComponent.Referential.UserObject.Retry,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Retry event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IFeedManager_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IFeedManager_StateMachine.Initializing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IFeedManager_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IFeedManager_StateMachine.Up_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IFeedManager_StateMachine.PendingReferential_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IFeedManager_StateMachine.NoReferential_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.FeedManager_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of FeedManager state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.FeedManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Retry,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Retry event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.FeedManager_StateMachine.SendEvent(XComponent.Referential.UserObject.Retry,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Retry event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.FeedManager_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.FeedManager_StateMachine.Initializing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.FeedManager_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.FeedManager_StateMachine.Up_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.FeedManager_StateMachine.PendingReferential_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.FeedManager_StateMachine.NoReferential_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.FeedSource.FeedManager_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the FeedManager state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.FeedManager.INoReferential_State.Retry(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Retry,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Retry event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.FeedManager.INoReferential_State.Retry(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Retry transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Gateway state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.Stop,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.Stop event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.RestoreSubscription,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.FeedSource.UserObject.RestoreSubscription event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.UnsubscriptionRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.UnsubscriptionRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.SubscriptionRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.SubscriptionRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Feeds.SnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Feeds.SnapshotRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.InitReport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.InitReport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.ConnectionLost,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.ConnectionLost event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.SessionId,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.SubscriptionPreprocessor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.FeedSource.UserObject.SubscriptionPreprocessor event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(PerseusLib.Common.Dto.Feeds.SnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Feeds.SnapshotRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">XComponent.Common.Event.DefaultEvent event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.FeedSource.UserObject.ConnectionLost,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.ConnectionLost event
            </summary>
      <param name="evt">XComponent.FeedSource.UserObject.ConnectionLost event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.FeedSource.UserObject.InitReport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.InitReport event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.FeedSource.UserObject.RestoreSubscription,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.FeedSource.UserObject.RestoreSubscription event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.FeedSource.UserObject.Stop,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.Stop event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.FeedSource.UserObject.SubscriptionPreprocessor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.FeedSource.UserObject.SubscriptionPreprocessor event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.FeedSource.UserObject.SubscriptionRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.SubscriptionRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.FeedSource.UserObject.UnsubscriptionRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.UnsubscriptionRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.SendEvent(XComponent.UserManagement.UserObject.SessionId,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionId event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.SessionId event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.Connecting_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.Down_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.Started_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.ProviderError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IGateway_StateMachine.Recovering_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Gateway state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.Stop,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.Stop event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.RestoreSubscription,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.FeedSource.UserObject.RestoreSubscription event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.UnsubscriptionRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.UnsubscriptionRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.SubscriptionRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.SubscriptionRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Feeds.SnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Feeds.SnapshotRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.InitReport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.InitReport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.ConnectionLost,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.ConnectionLost event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.SessionId,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.SubscriptionPreprocessor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.FeedSource.UserObject.SubscriptionPreprocessor event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(PerseusLib.Common.Dto.Feeds.SnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Feeds.SnapshotRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">XComponent.Common.Event.DefaultEvent event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.FeedSource.UserObject.ConnectionLost,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.ConnectionLost event
            </summary>
      <param name="evt">XComponent.FeedSource.UserObject.ConnectionLost event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.FeedSource.UserObject.InitReport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.InitReport event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.FeedSource.UserObject.RestoreSubscription,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.FeedSource.UserObject.RestoreSubscription event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.FeedSource.UserObject.Stop,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.Stop event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.FeedSource.UserObject.SubscriptionPreprocessor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.FeedSource.UserObject.SubscriptionPreprocessor event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.FeedSource.UserObject.SubscriptionRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.SubscriptionRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.FeedSource.UserObject.UnsubscriptionRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.UnsubscriptionRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.SendEvent(XComponent.UserManagement.UserObject.SessionId,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionId event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.SessionId event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.Connecting_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.Down_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.Started_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.ProviderError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.Recovering_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.FeedSource.Gateway_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the Gateway state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IDown_State.Reconnect(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IDown_State.Reconnect(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Reconnect transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.Stop(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.Stop,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.Stop event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.RestoreSubscription(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.RestoreSubscription,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.FeedSource.UserObject.RestoreSubscription event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.Unsubscribe(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.UnsubscriptionRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.UnsubscriptionRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.Subscribe(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.SubscriptionRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.SubscriptionRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.GetSnapshot(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Feeds.SnapshotRequest,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Feeds.SnapshotRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.HandleProviderError(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.InitReport,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.InitReport event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.ConnectionLost(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.ConnectionLost,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.FeedSource.UserObject.ConnectionLost event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.OnSessionClosed(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.SessionId,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.PreprocessRequest(XComponent.Common.ApiContext.Context,XComponent.FeedSource.UserObject.SubscriptionPreprocessor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.FeedSource.UserObject.SubscriptionPreprocessor event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.ArchiveSubscriptions(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.Stop(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Stop transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.RestoreSubscription(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the RestoreSubscription transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.Unsubscribe(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Unsubscribe transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.Subscribe(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Subscribe transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.GetSnapshot(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the GetSnapshot transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.HandleProviderError(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the HandleProviderError transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.ConnectionLost(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the ConnectionLost transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.OnSessionClosed(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the OnSessionClosed transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.PreprocessRequest(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the PreprocessRequest transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Gateway.IStarted_State.ArchiveSubscriptions(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the ArchiveSubscriptions transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IFeed_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Feed state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IFeed_StateMachine.Live_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IFeed_StateMachine.Closed_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.Feed_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Feed state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.Feed_StateMachine.Live_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.Feed_StateMachine.Closed_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.FeedSource.Feed_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the Feed state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IDataSubscription_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of DataSubscription state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IDataSubscription_StateMachine.Pending_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IDataSubscription_StateMachine.Running_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IDataSubscription_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IDataSubscription_StateMachine.Timeout_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IDataSubscription_StateMachine.PendingReferential_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IDataSubscription_StateMachine.ReferentialTimeout_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IDataSubscription_StateMachine.AlreadySubscribedInError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IDataSubscription_StateMachine.Recovering_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IDataSubscription_StateMachine.Closed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IDataSubscription_StateMachine.UnknownRequestType_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IDataSubscription_StateMachine.Init_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IDataSubscription_StateMachine.AlreadySubscribed_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.DataSubscription_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of DataSubscription state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.DataSubscription_StateMachine.Pending_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.DataSubscription_StateMachine.Running_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.DataSubscription_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.DataSubscription_StateMachine.Timeout_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.DataSubscription_StateMachine.PendingReferential_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.DataSubscription_StateMachine.ReferentialTimeout_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.DataSubscription_StateMachine.AlreadySubscribedInError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.DataSubscription_StateMachine.Recovering_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.DataSubscription_StateMachine.Closed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.DataSubscription_StateMachine.UnknownRequestType_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.DataSubscription_StateMachine.Init_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.DataSubscription_StateMachine.AlreadySubscribed_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.FeedSource.DataSubscription_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the DataSubscription state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IFeedSnapshot_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of FeedSnapshot state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IFeedSnapshot_StateMachine.Published_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.FeedSnapshot_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of FeedSnapshot state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.FeedSnapshot_StateMachine.Published_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.FeedSource.FeedSnapshot_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the FeedSnapshot state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.IDataSubscriptionDenial_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of DataSubscriptionDenial state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.IDataSubscriptionDenial_StateMachine.Published_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource.DataSubscriptionDenial_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of DataSubscriptionDenial state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource.DataSubscriptionDenial_StateMachine.Published_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.FeedSource.DataSubscriptionDenial_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the DataSubscriptionDenial state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IReferentialFeedManager_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ReferentialFeedManager state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IReferentialFeedManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IReferentialFeedManager_StateMachine.SendEvent(XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IReferentialFeedManager_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IReferentialFeedManager_StateMachine.PendingFeedSource_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IReferentialFeedManager_StateMachine.Down_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IReferentialFeedManager_StateMachine.Up_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ReferentialFeedSource.ReferentialFeedManager_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ReferentialFeedManager state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ReferentialFeedSource.ReferentialFeedManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ReferentialFeedSource.ReferentialFeedManager_StateMachine.SendEvent(XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.ReferentialFeedManager_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.ReferentialFeedManager_StateMachine.PendingFeedSource_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.ReferentialFeedManager_StateMachine.Down_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.ReferentialFeedManager_StateMachine.Up_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.ReferentialFeedSource.ReferentialFeedManager_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ReferentialFeedManager state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ReferentialFeedSource.ReferentialFeedManager.IUp_State.GetReferentialFeed(XComponent.Common.ApiContext.Context,XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ReferentialFeedSource.ReferentialFeedManager.IUp_State.GetReferentialFeed(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetReferentialFeed transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IHeartBeatRequest_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of HeartBeatRequest state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IHeartBeatRequest_StateMachine.Sent_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ReferentialFeedSource.HeartBeatRequest_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of HeartBeatRequest state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.HeartBeatRequest_StateMachine.Sent_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.ReferentialFeedSource.HeartBeatRequest_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the HeartBeatRequest state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IFeedSourceOrchestrator_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of FeedSourceOrchestrator state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IFeedSourceOrchestrator_StateMachine.WaitForTickSize_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IFeedSourceOrchestrator_StateMachine.WaitForDictionary_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IFeedSourceOrchestrator_StateMachine.Aggregate_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IFeedSourceOrchestrator_StateMachine.TickSizeTimeout_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IFeedSourceOrchestrator_StateMachine.DictionaryTimeout_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IFeedSourceOrchestrator_StateMachine.Done_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IFeedSourceOrchestrator_StateMachine.Incomplete_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IFeedSourceOrchestrator_StateMachine.Init_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IFeedSourceOrchestrator_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ReferentialFeedSource.FeedSourceOrchestrator_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of FeedSourceOrchestrator state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.FeedSourceOrchestrator_StateMachine.WaitForTickSize_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.FeedSourceOrchestrator_StateMachine.WaitForDictionary_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.FeedSourceOrchestrator_StateMachine.Aggregate_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.FeedSourceOrchestrator_StateMachine.TickSizeTimeout_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.FeedSourceOrchestrator_StateMachine.DictionaryTimeout_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.FeedSourceOrchestrator_StateMachine.Done_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.FeedSourceOrchestrator_StateMachine.Incomplete_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.FeedSourceOrchestrator_StateMachine.Init_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.FeedSourceOrchestrator_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.ReferentialFeedSource.FeedSourceOrchestrator_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the FeedSourceOrchestrator state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IReferentialFeed_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ReferentialFeed state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IReferentialFeed_StateMachine.Closed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IReferentialFeed_StateMachine.Running_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ReferentialFeedSource.ReferentialFeed_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ReferentialFeed state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.ReferentialFeed_StateMachine.Closed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.ReferentialFeed_StateMachine.Running_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.ReferentialFeedSource.ReferentialFeed_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ReferentialFeed state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IShutDownTimer_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ShutDownTimer state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IShutDownTimer_StateMachine.Started_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.IShutDownTimer_StateMachine.Stopped_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ReferentialFeedSource.ShutDownTimer_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ShutDownTimer state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.ShutDownTimer_StateMachine.Started_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource.ShutDownTimer_StateMachine.Stopped_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.ReferentialFeedSource.ShutDownTimer_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ShutDownTimer state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Referential state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.HeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.HeartBeat event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.CustomInstrumentRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CustomInstrumentRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.CreateInstrument,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CreateInstrument event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.MultiFieldsQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.MultiFieldsQuery event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.DoQuickSearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.DoQuickSearch event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ImportReferentialFromCsv,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ImportReferentialFromCsv event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Import,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Import event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetAllInstruments,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetAllInstruments event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Referential.UserObject.CreateInstrument,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CreateInstrument event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.CreateInstrument event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Referential.UserObject.CustomInstrumentRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CustomInstrumentRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Referential.UserObject.DoQuickSearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.DoQuickSearch event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Referential.UserObject.GetAllInstruments,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetAllInstruments event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Referential.UserObject.HeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.HeartBeat event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Referential.UserObject.Import,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Import event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Referential.UserObject.ImportReferentialFromCsv,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ImportReferentialFromCsv event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.ImportReferentialFromCsv event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.SendEvent(XComponent.Referential.UserObject.MultiFieldsQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.MultiFieldsQuery event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.LoadingReferential_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.ReferentialUp_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.RefrentialDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.RegisterSession_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.WaitForUserManagement_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.Init_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IReferential_StateMachine.Importing_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Referential state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.HeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.HeartBeat event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.CustomInstrumentRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CustomInstrumentRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.CreateInstrument,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CreateInstrument event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.MultiFieldsQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.MultiFieldsQuery event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.DoQuickSearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.DoQuickSearch event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ImportReferentialFromCsv,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ImportReferentialFromCsv event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Import,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Import event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetAllInstruments,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetAllInstruments event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.SendEvent(XComponent.Referential.UserObject.CreateInstrument,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CreateInstrument event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.CreateInstrument event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.SendEvent(XComponent.Referential.UserObject.CustomInstrumentRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.CustomInstrumentRequest event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.SendEvent(XComponent.Referential.UserObject.DoQuickSearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.DoQuickSearch event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.SendEvent(XComponent.Referential.UserObject.GetAllInstruments,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetAllInstruments event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.SendEvent(XComponent.Referential.UserObject.HeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.HeartBeat event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.SendEvent(XComponent.Referential.UserObject.Import,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Import event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.SendEvent(XComponent.Referential.UserObject.ImportReferentialFromCsv,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ImportReferentialFromCsv event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.ImportReferentialFromCsv event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.SendEvent(XComponent.Referential.UserObject.MultiFieldsQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.MultiFieldsQuery event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.LoadingReferential_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.ReferentialUp_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.RefrentialDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.RegisterSession_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.WaitForUserManagement_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.Init_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.Importing_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.Referential.Referential_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the Referential state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential.IReferentialUp_State.HeartBeatRequest(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.HeartBeat,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.HeartBeat event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential.IReferentialUp_State.CustomInstrumentRequest(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.CustomInstrumentRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.CustomInstrumentRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential.IReferentialUp_State.CreateInstrument(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.CreateInstrument,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.CreateInstrument event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential.IReferentialUp_State.MultiFieldsQuery(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.MultiFieldsQuery,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.MultiFieldsQuery event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential.IReferentialUp_State.DoQuickSearch(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.DoQuickSearch,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.DoQuickSearch event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential.IReferentialUp_State.StartCsvImport(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ImportReferentialFromCsv,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ImportReferentialFromCsv event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential.IReferentialUp_State.Import(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Import,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Import event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential.IReferentialUp_State.GetAllInstruments(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetAllInstruments,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetAllInstruments event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential.IReferentialUp_State.HeartBeatRequest(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the HeartBeatRequest transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential.IReferentialUp_State.CustomInstrumentRequest(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the CustomInstrumentRequest transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential.IReferentialUp_State.CreateInstrument(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the CreateInstrument transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential.IReferentialUp_State.MultiFieldsQuery(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the MultiFieldsQuery transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential.IReferentialUp_State.DoQuickSearch(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the DoQuickSearch transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential.IReferentialUp_State.StartCsvImport(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the StartCsvImport transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential.IReferentialUp_State.Import(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Import transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.Referential.IReferentialUp_State.GetAllInstruments(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetAllInstruments transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of FinancialInstrument state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Referential,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Referential event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetFromType,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromType event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetFromId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Update,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Update event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetFromIsin,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromIsin event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.IsValid,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.IsValid event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Done,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Done event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Down,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Down event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Done,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Done event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Down,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Down event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.Error event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.Error event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.GetFromId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromId event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.GetFromIsin,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromIsin event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.GetFromType,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromType event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.IsValid,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.IsValid event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Referential,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Referential event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Update,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Update event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.Update event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.GetRight event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.SendEvent(XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.RightRequest event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.Instrument_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.Cleared_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.InstrumentCreationError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.CheckingCreationRight_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.CreationRefused_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.InstrumentInvalid_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.CheckingUpdateAuthorisation_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.InstrumentCreation_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IFinancialInstrument_StateMachine.Finalization_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of FinancialInstrument state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Referential,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Referential event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetFromType,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromType event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetFromId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Update,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Update event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetFromIsin,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromIsin event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.IsValid,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.IsValid event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Done,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Done event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Down,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Down event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Done,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Done event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Down,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Down event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.Error event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.Error event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.GetFromId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromId event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.GetFromIsin,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromIsin event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.GetFromType,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromType event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.IsValid,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.IsValid event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Referential,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Referential event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.Referential.UserObject.Update,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Update event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.Update event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.GetRight event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.SendEvent(XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.RightRequest event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.Instrument_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.Cleared_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.InstrumentCreationError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.CheckingCreationRight_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.CreationRefused_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.InstrumentInvalid_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.CheckingUpdateAuthorisation_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.InstrumentCreation_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.Finalization_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the FinancialInstrument state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrument_State.Clear(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Referential,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Referential event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrument_State.GetInstrumentsFromType(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetFromType,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromType event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrument_State.GetInstrumentFromId(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetFromId,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrument_State.Update(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Update,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Update event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrument_State.GetInstrumentFromIsin(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.GetFromIsin,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.GetFromIsin event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrument_State.Clear(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Clear transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrument_State.GetInstrumentsFromType(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetInstrumentsFromType transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrument_State.GetInstrumentFromId(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetInstrumentFromId transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrument_State.Update(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Update transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrument_State.GetInstrumentFromIsin(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the GetInstrumentFromIsin transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.ICheckingCreationRight_State.Granted(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.ICheckingCreationRight_State.Denied(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.ICheckingCreationRight_State.RightRequest(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.ICheckingCreationRight_State.Granted(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Granted transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.ICheckingCreationRight_State.Denied(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Denied transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.ICheckingCreationRight_State.RightRequest(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the RightRequest transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.ICreationRefused_State.Collect(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.ICreationRefused_State.Collect(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Collect transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrumentInvalid_State.Update(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Update,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Update event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrumentInvalid_State.IsValid(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.IsValid,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.IsValid event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrumentInvalid_State.Error(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrumentInvalid_State.Update(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Update transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrumentInvalid_State.IsValid(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the IsValid transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrumentInvalid_State.Error(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the Error transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.ICheckingUpdateAuthorisation_State.Denied(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.ICheckingUpdateAuthorisation_State.Granted(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.GetRight,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.GetRight event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.ICheckingUpdateAuthorisation_State.RightRequest(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.RightRequest,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.UserManagement.UserObject.RightRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.ICheckingUpdateAuthorisation_State.Denied(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Denied transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.ICheckingUpdateAuthorisation_State.Granted(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Granted transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.ICheckingUpdateAuthorisation_State.RightRequest(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the RightRequest transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrumentCreation_State.Done(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Done,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Done event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrumentCreation_State.InstrumentCreationError(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Down,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Down event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrumentCreation_State.Error(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrumentCreation_State.Done(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Done transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrumentCreation_State.InstrumentCreationError(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the InstrumentCreationError transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.FinancialInstrument.IInstrumentCreation_State.Error(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the Error transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IInstrumentRequest_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of InstrumentRequest state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IInstrumentRequest_StateMachine.Processed_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.InstrumentRequest_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of InstrumentRequest state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.InstrumentRequest_StateMachine.Processed_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.Referential.InstrumentRequest_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the InstrumentRequest state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ICustomInstrumentRequest_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of CustomInstrumentRequest state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.ICustomInstrumentRequest_StateMachine.Processing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.ICustomInstrumentRequest_StateMachine.Processed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.ICustomInstrumentRequest_StateMachine.RequestError_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.CustomInstrumentRequest_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of CustomInstrumentRequest state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.CustomInstrumentRequest_StateMachine.Processing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.CustomInstrumentRequest_StateMachine.Processed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.CustomInstrumentRequest_StateMachine.RequestError_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.Referential.CustomInstrumentRequest_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the CustomInstrumentRequest state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeReferentialImport state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.InstrumentLoaded,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.InstrumentLoaded event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ReferentialFeedSource.UserObject.ReferentialFeed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialFeed event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.MinorError,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.MinorError event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ReferentialFeedSource.UserObject.FeedSourceOrchestrator,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.FeedSourceOrchestrator event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ReferentialFeedSource.UserObject.ReferentialTickSizeFeed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialTickSizeFeed event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ReferentialFeedSource.UserObject.ReferentialDictionaryFeed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialDictionaryFeed event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.InstrumentModified,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.InstrumentModified event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ModificationsCompleted,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ModificationsCompleted event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ModificationsPartiallyCompleted,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ModificationsPartiallyCompleted event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">XComponent.Common.Event.DefaultEvent event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Referential.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Error event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.Error event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Referential.UserObject.InstrumentLoaded,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.InstrumentLoaded event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Referential.UserObject.InstrumentModified,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.InstrumentModified event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Referential.UserObject.MinorError,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.MinorError event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.MinorError event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Referential.UserObject.ModificationsCompleted,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ModificationsCompleted event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.Referential.UserObject.ModificationsPartiallyCompleted,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ModificationsPartiallyCompleted event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.ReferentialFeedSource.UserObject.FeedSourceOrchestrator,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.FeedSourceOrchestrator event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.ReferentialFeedSource.UserObject.ReferentialDictionaryFeed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialDictionaryFeed event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.ReferentialFeedSource.UserObject.ReferentialFeed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialFeed event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.SendEvent(XComponent.ReferentialFeedSource.UserObject.ReferentialTickSizeFeed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialTickSizeFeed event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.Importing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.Completed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.Init_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.Finalized_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.Canceled_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IExchangeReferentialImport_StateMachine.PartiallyCompleted_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeReferentialImport state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.InstrumentLoaded,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.InstrumentLoaded event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ReferentialFeedSource.UserObject.ReferentialFeed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialFeed event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.MinorError,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.MinorError event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ReferentialFeedSource.UserObject.FeedSourceOrchestrator,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.FeedSourceOrchestrator event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ReferentialFeedSource.UserObject.ReferentialTickSizeFeed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialTickSizeFeed event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ReferentialFeedSource.UserObject.ReferentialDictionaryFeed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialDictionaryFeed event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.InstrumentModified,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.InstrumentModified event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ModificationsCompleted,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ModificationsCompleted event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ModificationsPartiallyCompleted,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ModificationsPartiallyCompleted event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">XComponent.Common.Event.DefaultEvent event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Referential.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Error event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.Error event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Referential.UserObject.InstrumentLoaded,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.InstrumentLoaded event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Referential.UserObject.InstrumentModified,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.InstrumentModified event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Referential.UserObject.MinorError,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Referential.UserObject.MinorError event
            </summary>
      <param name="evt">XComponent.Referential.UserObject.MinorError event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Referential.UserObject.ModificationsCompleted,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ModificationsCompleted event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.Referential.UserObject.ModificationsPartiallyCompleted,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ModificationsPartiallyCompleted event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.ReferentialFeedSource.UserObject.FeedSourceOrchestrator,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.FeedSourceOrchestrator event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.ReferentialFeedSource.UserObject.ReferentialDictionaryFeed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialDictionaryFeed event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.ReferentialFeedSource.UserObject.ReferentialFeed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialFeed event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.SendEvent(XComponent.ReferentialFeedSource.UserObject.ReferentialTickSizeFeed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialTickSizeFeed event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.Importing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.Completed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.Init_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.Finalized_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.Canceled_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.PartiallyCompleted_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ExchangeReferentialImport state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.RequestReferentialFeed(XComponent.Common.ApiContext.Context,XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialFeedDescriptor event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.InstrumentLoaded(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.InstrumentLoaded,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.InstrumentLoaded event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.OnFeedReceived(XComponent.Common.ApiContext.Context,XComponent.ReferentialFeedSource.UserObject.ReferentialFeed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialFeed event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.AddError(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.MinorError,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Referential.UserObject.MinorError event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.OnError(XComponent.Common.ApiContext.Context,XComponent.ReferentialFeedSource.UserObject.FeedSourceOrchestrator,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.FeedSourceOrchestrator event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.Timeout(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.OnTickSizeReceived(XComponent.Common.ApiContext.Context,XComponent.ReferentialFeedSource.UserObject.ReferentialTickSizeFeed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialTickSizeFeed event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.OnDictionaryReceived(XComponent.Common.ApiContext.Context,XComponent.ReferentialFeedSource.UserObject.ReferentialDictionaryFeed,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ReferentialFeedSource.UserObject.ReferentialDictionaryFeed event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.HandleError(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.Error,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.InstrumentModified(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.InstrumentModified,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.InstrumentModified event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.ModificationsCompleted(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ModificationsCompleted,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ModificationsCompleted event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.ModificationsPartiallyCompleted(XComponent.Common.ApiContext.Context,XComponent.Referential.UserObject.ModificationsPartiallyCompleted,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Referential.UserObject.ModificationsPartiallyCompleted event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.RequestReferentialFeed(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the RequestReferentialFeed transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.InstrumentLoaded(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the InstrumentLoaded transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.OnFeedReceived(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the OnFeedReceived transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.AddError(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the AddError transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.OnError(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the OnError transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.Timeout(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Timeout transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.OnTickSizeReceived(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the OnTickSizeReceived transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.OnDictionaryReceived(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the OnDictionaryReceived transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.HandleError(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the HandleError transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.InstrumentModified(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the InstrumentModified transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.ModificationsCompleted(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the ModificationsCompleted transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeReferentialImport.IImporting_State.ModificationsPartiallyCompleted(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the ModificationsPartiallyCompleted transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IExchangeImportError_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeImportError state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IExchangeImportError_StateMachine.ErrorReport_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ExchangeImportError_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeImportError state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.ExchangeImportError_StateMachine.ErrorReport_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.Referential.ExchangeImportError_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ExchangeImportError state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IQuickSearch_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of QuickSearch state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IQuickSearch_StateMachine.Processed_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.QuickSearch_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of QuickSearch state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.QuickSearch_StateMachine.Processed_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.Referential.QuickSearch_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the QuickSearch state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.IImportManager_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ImportManager state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.IImportManager_StateMachine.Running_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential.ImportManager_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ImportManager state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential.ImportManager_StateMachine.Running_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.Referential.ImportManager_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ImportManager state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.CheckOrder.ICheckComponent_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of CheckComponent state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.CheckOrder.ICheckComponent_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.CheckOrder.ICheckComponent_StateMachine.LoadingRules_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.CheckOrder.ICheckComponent_StateMachine.CheckComponentUp_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.CheckOrder.ICheckComponent_StateMachine.ComponentDown_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.CheckOrder.CheckComponent_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of CheckComponent state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.CheckOrder.CheckComponent_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.CheckOrder.CheckComponent_StateMachine.LoadingRules_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.CheckOrder.CheckComponent_StateMachine.CheckComponentUp_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.CheckOrder.CheckComponent_StateMachine.ComponentDown_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.CheckOrder.CheckComponent_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the CheckComponent state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.ICalculation_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Calculation state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Pricer.ICalculation_StateMachine.CalculationDone_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.Calculation_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Calculation state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Pricer.Calculation_StateMachine.CalculationDone_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.Pricer.Calculation_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the Calculation state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.IDetailedCalculation_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of DetailedCalculation state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Pricer.IDetailedCalculation_StateMachine.CalculationDone_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.DetailedCalculation_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of DetailedCalculation state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Pricer.DetailedCalculation_StateMachine.CalculationDone_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.Pricer.DetailedCalculation_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the DetailedCalculation state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.IPricer_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Pricer state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.IPricer_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Pricer.UserObject.RequestCalculation,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Pricer.UserObject.RequestCalculation event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.IPricer_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Referential.FinancialInstrument,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.FinancialInstrument event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.IPricer_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Pricer.UserObject.RequestDetailedCalculation,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Pricer.UserObject.RequestDetailedCalculation event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.IPricer_StateMachine.SendEvent(PerseusLib.Common.Dto.Referential.FinancialInstrument,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.FinancialInstrument
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.IPricer_StateMachine.SendEvent(XComponent.Pricer.UserObject.RequestCalculation,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Pricer.UserObject.RequestCalculation
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.IPricer_StateMachine.SendEvent(XComponent.Pricer.UserObject.RequestDetailedCalculation,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Pricer.UserObject.RequestDetailedCalculation
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Pricer.IPricer_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Pricer.IPricer_StateMachine.PricerUp_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.Pricer_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Pricer state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.Pricer_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Pricer.UserObject.RequestCalculation,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Pricer.UserObject.RequestCalculation event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.Pricer_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Referential.FinancialInstrument,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.FinancialInstrument event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.Pricer_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Pricer.UserObject.RequestDetailedCalculation,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Pricer.UserObject.RequestDetailedCalculation event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.Pricer_StateMachine.SendEvent(PerseusLib.Common.Dto.Referential.FinancialInstrument,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.FinancialInstrument
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.Pricer_StateMachine.SendEvent(XComponent.Pricer.UserObject.RequestCalculation,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Pricer.UserObject.RequestCalculation
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.Pricer_StateMachine.SendEvent(XComponent.Pricer.UserObject.RequestDetailedCalculation,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.Pricer.UserObject.RequestDetailedCalculation
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Pricer.Pricer_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Pricer.Pricer_StateMachine.PricerUp_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.Pricer.IPricerUp_State.RequestCalculation(XComponent.Common.ApiContext.Context,XComponent.Pricer.UserObject.RequestCalculation,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Pricer.UserObject.RequestCalculation event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.Pricer.IPricerUp_State.InstrumentUpdated(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Referential.FinancialInstrument,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.FinancialInstrument event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.Pricer.IPricerUp_State.RequestDetailedCalculation(XComponent.Common.ApiContext.Context,XComponent.Pricer.UserObject.RequestDetailedCalculation,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.Pricer.UserObject.RequestDetailedCalculation event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.Pricer.IPricerUp_State.RequestCalculation(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the RequestCalculation transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.Pricer.IPricerUp_State.InstrumentUpdated(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the InstrumentUpdated transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer.Pricer.IPricerUp_State.RequestDetailedCalculation(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the RequestDetailedCalculation transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of OrderManagementSystem state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.Restore,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Restore event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ShutDown,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ShutDown event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Orders.XCOrder,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the PerseusLib.Common.Dto.Orders.XCOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CreateExchangeListener,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CreateExchangeListener event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CreateExchangeMidnightListener,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CreateExchangeMidnightListener event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ExpireOrders,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExpireOrders event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.Disconnected,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Disconnected event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Referential.ExchangeInfo,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.Restore,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Restore event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(PerseusLib.Common.Dto.Orders.XCOrder,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the PerseusLib.Common.Dto.Orders.XCOrder event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(PerseusLib.Common.Dto.Referential.ExchangeInfo,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeInfo event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.CreateExchangeListener,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CreateExchangeListener event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.CreateExchangeMidnightListener,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CreateExchangeMidnightListener event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.Disconnected,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Disconnected event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.ExpireOrders,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExpireOrders event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.ShutDown,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ShutDown event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.Initializing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.Up_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.OnError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.Down_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.ShuttingDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.Disconnected_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of OrderManagementSystem state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.Restore,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Restore event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ShutDown,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ShutDown event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Orders.XCOrder,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the PerseusLib.Common.Dto.Orders.XCOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CreateExchangeListener,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CreateExchangeListener event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CreateExchangeMidnightListener,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CreateExchangeMidnightListener event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ExpireOrders,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExpireOrders event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.Disconnected,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Disconnected event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Referential.ExchangeInfo,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.Restore,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Restore event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(PerseusLib.Common.Dto.Orders.XCOrder,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the PerseusLib.Common.Dto.Orders.XCOrder event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(PerseusLib.Common.Dto.Referential.ExchangeInfo,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeInfo event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.CreateExchangeListener,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CreateExchangeListener event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.CreateExchangeMidnightListener,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CreateExchangeMidnightListener event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.Disconnected,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Disconnected event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.ExpireOrders,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExpireOrders event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.ShutDown,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ShutDown event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.Initializing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.Up_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.OnError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.Down_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.ShuttingDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.Disconnected_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the OrderManagementSystem state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem.IUp_State.SuhtDown(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ShutDown,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ShutDown event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem.IUp_State.CreateOrder(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Orders.XCOrder,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the PerseusLib.Common.Dto.Orders.XCOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem.IUp_State.CreateExchangeListener(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CreateExchangeListener,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CreateExchangeListener event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem.IUp_State.CreateExchangeMidnightListener(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CreateExchangeMidnightListener,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CreateExchangeMidnightListener event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem.IUp_State.ExpireOrders(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ExpireOrders,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExpireOrders event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem.IUp_State.GotDisconnected(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.Disconnected,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Disconnected event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem.IUp_State.ExpireDayBeforeOrders(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Referential.ExchangeInfo,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem.IUp_State.SuhtDown(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the SuhtDown transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem.IUp_State.CreateOrder(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the CreateOrder transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem.IUp_State.CreateExchangeListener(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the CreateExchangeListener transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem.IUp_State.CreateExchangeMidnightListener(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the CreateExchangeMidnightListener transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem.IUp_State.ExpireOrders(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the ExpireOrders transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem.IUp_State.GotDisconnected(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the GotDisconnected transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem.IUp_State.ExpireDayBeforeOrders(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the ExpireDayBeforeOrders transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem.IDown_State.Restore(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.Restore,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Restore event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.OrderManagementSystem.IDown_State.Restore(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Restore transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.ITrade_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Trade state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.ITrade_StateMachine.Trade_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Trade_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Trade state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.Trade_StateMachine.Trade_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.OrderManagementSystem.Trade_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the Trade state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Order state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.Modify,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Modify event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CancelOrder,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.SessionId,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CancellationAcceptance,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancellationAcceptance event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CancelRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.PartialExecutionInput,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.PartialExecutionInput event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CancelAcked,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelAcked event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ExecutionInput,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExecutionInput event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.RejectCancel,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.RejectCancel event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CreateTrade,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CreateTrade event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ExpireOrders,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExpireOrders event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.Acknowledgement,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Acknowledgement event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.RejectOrder,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.RejectOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.RejectModification,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.RejectModification event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.AcceptModification,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.AcceptModification event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ModifyAcked,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ModifyAcked event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.CancelOrder,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelOrder event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.CancelOrder event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.Modify,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Modify event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.Modify event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.UserManagement.UserObject.SessionId,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionId event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.SessionId event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.CancelAcked,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelAcked event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.CancelAcked event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.CancellationAcceptance,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancellationAcceptance event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.CancellationAcceptance event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.CancelRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelRequest event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.CancelRequest event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.CreateTrade,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CreateTrade event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.CreateTrade event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.ExecutionInput,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExecutionInput event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.ExecutionInput event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.ExpireOrders,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExpireOrders event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.ExpireOrders event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.PartialExecutionInput,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.PartialExecutionInput event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.PartialExecutionInput event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.RejectCancel,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.RejectCancel event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.RejectCancel event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">XComponent.Common.Event.DefaultEvent event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.Acknowledgement,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Acknowledgement event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.RejectOrder,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.RejectOrder event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.AcceptModification,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.AcceptModification event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.ModifyAcked,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ModifyAcked event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.RejectModification,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.RejectModification event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.CheckingFailed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.Created_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.WaitingForAck_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.Pending_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.WaitingForModification_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.TimedOut_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.Canceled_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.Rejected_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.Executed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.Finalized_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.Loading_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IOrder_StateMachine.Expired_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Order state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.Modify,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Modify event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CancelOrder,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.SessionId,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CancellationAcceptance,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancellationAcceptance event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CancelRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.PartialExecutionInput,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.PartialExecutionInput event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CancelAcked,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelAcked event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ExecutionInput,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExecutionInput event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.RejectCancel,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.RejectCancel event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CreateTrade,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CreateTrade event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ExpireOrders,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExpireOrders event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.Acknowledgement,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Acknowledgement event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.RejectOrder,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.RejectOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.RejectModification,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.RejectModification event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.AcceptModification,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.AcceptModification event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ModifyAcked,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ModifyAcked event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.CancelOrder,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelOrder event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.CancelOrder event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.Modify,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Modify event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.Modify event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.UserManagement.UserObject.SessionId,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionId event
            </summary>
      <param name="evt">XComponent.UserManagement.UserObject.SessionId event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.CancelAcked,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelAcked event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.CancelAcked event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.CancellationAcceptance,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancellationAcceptance event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.CancellationAcceptance event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.CancelRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelRequest event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.CancelRequest event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.CreateTrade,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CreateTrade event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.CreateTrade event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.ExecutionInput,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExecutionInput event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.ExecutionInput event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.ExpireOrders,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExpireOrders event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.ExpireOrders event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.PartialExecutionInput,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.PartialExecutionInput event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.PartialExecutionInput event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.RejectCancel,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.RejectCancel event
            </summary>
      <param name="evt">XComponent.OrderManagementSystem.UserObject.RejectCancel event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event
            </summary>
      <param name="evt">XComponent.Common.Event.DefaultEvent event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.Acknowledgement,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Acknowledgement event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.RejectOrder,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.RejectOrder event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.AcceptModification,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.AcceptModification event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.ModifyAcked,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ModifyAcked event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.SendEvent(XComponent.OrderManagementSystem.UserObject.RejectModification,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.RejectModification event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.Checking_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.CheckingFailed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.Created_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.WaitingForAck_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.Pending_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.WaitingForModification_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.TimedOut_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.Canceled_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.Rejected_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.Executed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.Finalized_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.Loading_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.Expired_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the Order state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.ICheckingFailed_State.ModifyOrder(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.Modify,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Modify event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.ICheckingFailed_State.Cancel(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CancelOrder,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.ICheckingFailed_State.UserSessionIsDown(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.SessionId,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.ICheckingFailed_State.ModifyOrder(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the ModifyOrder transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.ICheckingFailed_State.Cancel(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Cancel transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.ICheckingFailed_State.UserSessionIsDown(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the UserSessionIsDown transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.Acknowledge(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.Acknowledgement,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Acknowledgement event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.TimeOut(XComponent.Common.ApiContext.Context,XComponent.Common.Event.DefaultEvent,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.Common.Event.DefaultEvent event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.AcceptCancel(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CancellationAcceptance,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancellationAcceptance event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.RejectOrder(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.RejectOrder,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.RejectOrder event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.RequestCancel(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CancelRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.CancelAcked(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CancelAcked,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelAcked event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.PartiallyExecute(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.PartialExecutionInput,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.PartialExecutionInput event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.UserSessionIsDown(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.SessionId,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.Execute(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ExecutionInput,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExecutionInput event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.RejectCancel(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.RejectCancel,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.RejectCancel event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.Expire(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ExpireOrders,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExpireOrders event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.CreateTrade(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CreateTrade,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CreateTrade event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.Acknowledge(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Acknowledge transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.TimeOut(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the TimeOut transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.AcceptCancel(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the AcceptCancel transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.RejectOrder(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the RejectOrder transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.RequestCancel(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the RequestCancel transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.CancelAcked(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the CancelAcked transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.PartiallyExecute(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the PartiallyExecute transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.UserSessionIsDown(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the UserSessionIsDown transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.Execute(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Execute transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.RejectCancel(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the RejectCancel transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.Expire(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Expire transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForAck_State.CreateTrade(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the CreateTrade transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.Modify(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.Modify,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.Modify event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.AcceptCancel(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CancellationAcceptance,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancellationAcceptance event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.RequestCancel(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CancelRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.PartiallyExecute(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.PartialExecutionInput,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.PartialExecutionInput event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.CancelAcked(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CancelAcked,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelAcked event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.UserSessionIsDown(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.SessionId,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.Execute(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ExecutionInput,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExecutionInput event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.RejectCancel(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.RejectCancel,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.RejectCancel event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.CreateTrade(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CreateTrade,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CreateTrade event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.Expire(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ExpireOrders,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExpireOrders event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.Modify(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Modify transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.AcceptCancel(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the AcceptCancel transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.RequestCancel(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the RequestCancel transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.PartiallyExecute(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the PartiallyExecute transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.CancelAcked(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the CancelAcked transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.UserSessionIsDown(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the UserSessionIsDown transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.Execute(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Execute transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.RejectCancel(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the RejectCancel transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.CreateTrade(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the CreateTrade transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IPending_State.Expire(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Expire transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.RejectModification(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.RejectModification,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.RejectModification event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.AcceptModification(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.AcceptModification,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.AcceptModification event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.AcceptCancel(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CancellationAcceptance,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancellationAcceptance event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.RequestCancel(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CancelRequest,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelRequest event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.PartiallyExecute(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.PartialExecutionInput,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.PartialExecutionInput event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.CancelAcked(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CancelAcked,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CancelAcked event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.ModifyAcked(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ModifyAcked,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ModifyAcked event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.CreateTrade(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.CreateTrade,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.CreateTrade event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.UserSessionIsDown(XComponent.Common.ApiContext.Context,XComponent.UserManagement.UserObject.SessionId,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.UserManagement.UserObject.SessionId event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.Execute(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ExecutionInput,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExecutionInput event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.RejectCancel(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.RejectCancel,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.RejectCancel event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.Expire(XComponent.Common.ApiContext.Context,XComponent.OrderManagementSystem.UserObject.ExpireOrders,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.OrderManagementSystem.UserObject.ExpireOrders event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.RejectModification(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the RejectModification transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.AcceptModification(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the AcceptModification transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.AcceptCancel(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the AcceptCancel transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.RequestCancel(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the RequestCancel transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.PartiallyExecute(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the PartiallyExecute transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.CancelAcked(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the CancelAcked transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.ModifyAcked(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the ModifyAcked transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.CreateTrade(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the CreateTrade transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.UserSessionIsDown(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the UserSessionIsDown transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.Execute(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Execute transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.RejectCancel(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the RejectCancel transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.Order.IWaitingForModification_State.Expire(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Expire transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IExchangeMidnightListener_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeMidnightListener state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IExchangeMidnightListener_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Referential.ExchangeInfo,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.IExchangeMidnightListener_StateMachine.SendEvent(PerseusLib.Common.Dto.Referential.ExchangeInfo,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeInfo event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.IExchangeMidnightListener_StateMachine.Listen_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.ExchangeMidnightListener_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeMidnightListener state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.ExchangeMidnightListener_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Referential.ExchangeInfo,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.ExchangeMidnightListener_StateMachine.SendEvent(PerseusLib.Common.Dto.Referential.ExchangeInfo,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeInfo event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem.ExchangeMidnightListener_StateMachine.Listen_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.OrderManagementSystem.ExchangeMidnightListener_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ExchangeMidnightListener state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.ExchangeMidnightListener.IListen_State.ExchangeMidnight(XComponent.Common.ApiContext.Context,PerseusLib.Common.Dto.Referential.ExchangeInfo,System.Action{System.Exception})">
      <summary>
            Sends the PerseusLib.Common.Dto.Referential.ExchangeInfo event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem.ExchangeMidnightListener.IListen_State.ExchangeMidnight(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the ExchangeMidnight transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeManager_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeManager state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.Retry,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.Retry event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeManager_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.Error event
            </summary>
      <param name="evt">XComponent.ExchangeManager.UserObject.Error event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeManager_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.Retry,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.Retry event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeManager_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeManager_StateMachine.Loaded_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeManager_StateMachine.LoadingError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeManager_StateMachine.Loading_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeManager_StateMachine.Initialized_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeManager_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeManager state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeManager_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.Retry,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.Retry event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeManager_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.Error event
            </summary>
      <param name="evt">XComponent.ExchangeManager.UserObject.Error event</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeManager_StateMachine.SendEvent(XComponent.ExchangeManager.UserObject.Retry,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.Retry event
            </summary>
      <param name="evt">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeManager_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeManager_StateMachine.Loaded_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeManager_StateMachine.LoadingError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeManager_StateMachine.Loading_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeManager_StateMachine.Initialized_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeManager_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ExchangeManager state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeManager.ILoadingError_State.PublishError(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.Error,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.Error event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeManager.ILoadingError_State.Retry(XComponent.Common.ApiContext.Context,XComponent.ExchangeManager.UserObject.Retry,System.Action{System.Exception})">
      <summary>
            Sends the XComponent.ExchangeManager.UserObject.Retry event using a context. 
            </summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="transitionEvent">
      </param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeManager.ILoadingError_State.PublishError(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
      <summary>
            Triggers the PublishError transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
      <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
      <param name="topic">If parameter is set to a non null value and the visibility is set to Visibility.Private, the event will be sent with this topic. If parameter is set to a null value and the visibility is set to Visibility.Private, the event will be sent with the private topic. Otherwise the event will be sent with the public topic</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeManager.ILoadingError_State.Retry(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
      <summary>
            Triggers the Retry transition using a context. 
             <para></para></summary>
      <param name="context">Client Api context. Used to target a specific instance of state machine</param>
      <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.IExchange_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Exchange state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.IExchange_StateMachine.Loaded_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.IExchange_StateMachine.CheckingUpdateRights_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.IExchange_StateMachine.CheckingCreationRigths_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.IExchange_StateMachine.CreationError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.IExchange_StateMachine.Disposed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.IExchange_StateMachine.Creating_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.IExchange_StateMachine.Disabled_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.Exchange_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Exchange state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.Exchange_StateMachine.Loaded_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.Exchange_StateMachine.CheckingUpdateRights_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.Exchange_StateMachine.CheckingCreationRigths_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.Exchange_StateMachine.CreationError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.Exchange_StateMachine.Disposed_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.Exchange_StateMachine.Creating_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.Exchange_StateMachine.Disabled_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.ExchangeManager.Exchange_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the Exchange state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeOpening_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeOpening state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeOpening_StateMachine.Published_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeOpening_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeOpening state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeOpening_StateMachine.Published_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeOpening_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ExchangeOpening state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.IError_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Error state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.IError_StateMachine.Occured_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.Error_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Error state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.Error_StateMachine.Occured_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.ExchangeManager.Error_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the Error state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeError_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeError state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeError_StateMachine.Publish_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeError_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeError state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeError_StateMachine.Publish_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeError_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ExchangeError state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeLoading_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeLoading state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeLoading_StateMachine.Loaded_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeLoading_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeLoading state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeLoading_StateMachine.Loaded_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeLoading_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ExchangeLoading state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.ITimeZone_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of TimeZone state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.ITimeZone_StateMachine.Loaded_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.ITimeZone_StateMachine.Disposed_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.TimeZone_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of TimeZone state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.TimeZone_StateMachine.Loaded_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.TimeZone_StateMachine.Disposed_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.ExchangeManager.TimeZone_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the TimeZone state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeDisabling_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeDisabling state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeDisabling_StateMachine.Published_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeDisabling_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeDisabling state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeDisabling_StateMachine.Published_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeDisabling_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ExchangeDisabling state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeMidnight_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeMidnight state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.IExchangeMidnight_StateMachine.Published_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeMidnight_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ExchangeMidnight state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeMidnight_StateMachine.Published_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.PerseusApi.ExchangeManager.ExchangeMidnight_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ExchangeMidnight state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.IOrderDbAccessor_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the OrderDbAccessor component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IOrderDbAccessor_Component.OrderSnapshot_StateMachine">
      <summary>
            This property is used to communicate with OrderSnapshot state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IOrderDbAccessor_Component.TradeSnapshot_StateMachine">
      <summary>
            This property is used to communicate with TradeSnapshot state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IOrderDbAccessor_Component.NewTradeAvailable_StateMachine">
      <summary>
            This property is used to communicate with NewTradeAvailable state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IOrderDbAccessor_Component.OrdersTradesSnapshot_StateMachine">
      <summary>
            This property is used to communicate with OrdersTradesSnapshot state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IOrderDbAccessor_Component.OrderDbAccessor_StateMachine">
      <summary>
            This property is used to communicate with OrderDbAccessor state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.IResearch_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the ResearchCache component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IResearch_Component.ResearchCache_StateMachine">
      <summary>
            This property is used to communicate with ResearchCache state machine
             <para>The research cache is managing the research db. 3 differents states: Initializing, Initialized and error</para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IResearch_Component.ResearchEntity_StateMachine">
      <summary>
            This property is used to communicate with ResearchEntity state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IResearch_Component.ResearchDocument_StateMachine">
      <summary>
            This property is used to communicate with ResearchDocument state machine
             <para>This state machine is managing a specific request : get a research document (pdf) based on a document id. The content answer is null if no document is found</para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IResearch_Component.CacheUpdater_StateMachine">
      <summary>
            This property is used to communicate with CacheUpdater state machine
             <para>It manages cache updates periodically or on demand. It's important to notice that updates are asynchronous.</para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IResearch_Component.ResearchQuery_StateMachine">
      <summary>
            This property is used to communicate with ResearchQuery state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IResearch_Component.ResearchSuggestQuery_StateMachine">
      <summary>
            This property is used to communicate with ResearchSuggestQuery state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IResearch_Component.ResearchSettings_StateMachine">
      <summary>
            This property is used to communicate with ResearchSettings state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.IUserManagement_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the UserManagement component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IUserManagement_Component.UserManagement_StateMachine">
      <summary>
            This property is used to communicate with UserManagement state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IUserManagement_Component.UserSession_StateMachine">
      <summary>
            This property is used to communicate with UserSession state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IUserManagement_Component.GetRight_StateMachine">
      <summary>
            This property is used to communicate with GetRight state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IUserManagement_Component.CachedPermissionChecker_StateMachine">
      <summary>
            This property is used to communicate with CachedPermissionChecker state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IUserManagement_Component.ChangePassword_StateMachine">
      <summary>
            This property is used to communicate with ChangePassword state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IUserManagement_Component.UserEntityInfo_StateMachine">
      <summary>
            This property is used to communicate with UserEntityInfo state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IUserManagement_Component.BackendInfo_StateMachine">
      <summary>
            This property is used to communicate with BackendInfo state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.IFeedSource_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the FeedManager component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IFeedSource_Component.FeedManager_StateMachine">
      <summary>
            This property is used to communicate with FeedManager state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IFeedSource_Component.Gateway_StateMachine">
      <summary>
            This property is used to communicate with Gateway state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IFeedSource_Component.Feed_StateMachine">
      <summary>
            This property is used to communicate with Feed state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IFeedSource_Component.DataSubscription_StateMachine">
      <summary>
            This property is used to communicate with DataSubscription state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IFeedSource_Component.FeedSnapshot_StateMachine">
      <summary>
            This property is used to communicate with FeedSnapshot state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IFeedSource_Component.DataSubscriptionDenial_StateMachine">
      <summary>
            This property is used to communicate with DataSubscriptionDenial state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.IReferentialFeedSource_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the ReferentialFeedManager component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IReferentialFeedSource_Component.ReferentialFeedManager_StateMachine">
      <summary>
            This property is used to communicate with ReferentialFeedManager state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IReferentialFeedSource_Component.HeartBeatRequest_StateMachine">
      <summary>
            This property is used to communicate with HeartBeatRequest state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IReferentialFeedSource_Component.FeedSourceOrchestrator_StateMachine">
      <summary>
            This property is used to communicate with FeedSourceOrchestrator state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IReferentialFeedSource_Component.ReferentialFeed_StateMachine">
      <summary>
            This property is used to communicate with ReferentialFeed state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IReferentialFeedSource_Component.ShutDownTimer_StateMachine">
      <summary>
            This property is used to communicate with ShutDownTimer state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.IReferential_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the Referential component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IReferential_Component.Referential_StateMachine">
      <summary>
            This property is used to communicate with Referential state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IReferential_Component.FinancialInstrument_StateMachine">
      <summary>
            This property is used to communicate with FinancialInstrument state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IReferential_Component.InstrumentRequest_StateMachine">
      <summary>
            This property is used to communicate with InstrumentRequest state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IReferential_Component.CustomInstrumentRequest_StateMachine">
      <summary>
            This property is used to communicate with CustomInstrumentRequest state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IReferential_Component.ExchangeReferentialImport_StateMachine">
      <summary>
            This property is used to communicate with ExchangeReferentialImport state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IReferential_Component.ExchangeImportError_StateMachine">
      <summary>
            This property is used to communicate with ExchangeImportError state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IReferential_Component.QuickSearch_StateMachine">
      <summary>
            This property is used to communicate with QuickSearch state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IReferential_Component.ImportManager_StateMachine">
      <summary>
            This property is used to communicate with ImportManager state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ICheckOrder_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the CheckComponent component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ICheckOrder_Component.CheckComponent_StateMachine">
      <summary>
            This property is used to communicate with CheckComponent state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.IPricer_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the Pricer component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IPricer_Component.Calculation_StateMachine">
      <summary>
            This property is used to communicate with Calculation state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IPricer_Component.DetailedCalculation_StateMachine">
      <summary>
            This property is used to communicate with DetailedCalculation state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IPricer_Component.Pricer_StateMachine">
      <summary>
            This property is used to communicate with Pricer state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.IOrderManagementSystem_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the OrderManagementSystem component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IOrderManagementSystem_Component.OrderManagementSystem_StateMachine">
      <summary>
            This property is used to communicate with OrderManagementSystem state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IOrderManagementSystem_Component.Trade_StateMachine">
      <summary>
            This property is used to communicate with Trade state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IOrderManagementSystem_Component.Order_StateMachine">
      <summary>
            This property is used to communicate with Order state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IOrderManagementSystem_Component.ExchangeMidnightListener_StateMachine">
      <summary>
            This property is used to communicate with ExchangeMidnightListener state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.IExchangeManager_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the ExchangeManager component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IExchangeManager_Component.ExchangeManager_StateMachine">
      <summary>
            This property is used to communicate with ExchangeManager state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IExchangeManager_Component.Exchange_StateMachine">
      <summary>
            This property is used to communicate with Exchange state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IExchangeManager_Component.ExchangeOpening_StateMachine">
      <summary>
            This property is used to communicate with ExchangeOpening state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IExchangeManager_Component.Error_StateMachine">
      <summary>
            This property is used to communicate with Error state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IExchangeManager_Component.ExchangeError_StateMachine">
      <summary>
            This property is used to communicate with ExchangeError state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IExchangeManager_Component.ExchangeLoading_StateMachine">
      <summary>
            This property is used to communicate with ExchangeLoading state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IExchangeManager_Component.TimeZone_StateMachine">
      <summary>
            This property is used to communicate with TimeZone state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IExchangeManager_Component.ExchangeDisabling_StateMachine">
      <summary>
            This property is used to communicate with ExchangeDisabling state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.IExchangeManager_Component.ExchangeMidnight_StateMachine">
      <summary>
            This property is used to communicate with ExchangeMidnight state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderDbAccessor_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the OrderDbAccessor component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderDbAccessor_Component.OrderSnapshot_StateMachine">
      <summary>
            This property is used to communicate with OrderSnapshot state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderDbAccessor_Component.TradeSnapshot_StateMachine">
      <summary>
            This property is used to communicate with TradeSnapshot state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderDbAccessor_Component.NewTradeAvailable_StateMachine">
      <summary>
            This property is used to communicate with NewTradeAvailable state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderDbAccessor_Component.OrdersTradesSnapshot_StateMachine">
      <summary>
            This property is used to communicate with OrdersTradesSnapshot state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderDbAccessor_Component.OrderDbAccessor_StateMachine">
      <summary>
            This property is used to communicate with OrderDbAccessor state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Research_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the ResearchCache component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research_Component.ResearchCache_StateMachine">
      <summary>
            This property is used to communicate with ResearchCache state machine
             <para>The research cache is managing the research db. 3 differents states: Initializing, Initialized and error</para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research_Component.ResearchEntity_StateMachine">
      <summary>
            This property is used to communicate with ResearchEntity state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research_Component.ResearchDocument_StateMachine">
      <summary>
            This property is used to communicate with ResearchDocument state machine
             <para>This state machine is managing a specific request : get a research document (pdf) based on a document id. The content answer is null if no document is found</para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research_Component.CacheUpdater_StateMachine">
      <summary>
            This property is used to communicate with CacheUpdater state machine
             <para>It manages cache updates periodically or on demand. It's important to notice that updates are asynchronous.</para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research_Component.ResearchQuery_StateMachine">
      <summary>
            This property is used to communicate with ResearchQuery state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research_Component.ResearchSuggestQuery_StateMachine">
      <summary>
            This property is used to communicate with ResearchSuggestQuery state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Research_Component.ResearchSettings_StateMachine">
      <summary>
            This property is used to communicate with ResearchSettings state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.UserManagement_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the UserManagement component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement_Component.UserManagement_StateMachine">
      <summary>
            This property is used to communicate with UserManagement state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement_Component.UserSession_StateMachine">
      <summary>
            This property is used to communicate with UserSession state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement_Component.GetRight_StateMachine">
      <summary>
            This property is used to communicate with GetRight state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement_Component.CachedPermissionChecker_StateMachine">
      <summary>
            This property is used to communicate with CachedPermissionChecker state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement_Component.ChangePassword_StateMachine">
      <summary>
            This property is used to communicate with ChangePassword state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement_Component.UserEntityInfo_StateMachine">
      <summary>
            This property is used to communicate with UserEntityInfo state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.UserManagement_Component.BackendInfo_StateMachine">
      <summary>
            This property is used to communicate with BackendInfo state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.FeedSource_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the FeedManager component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource_Component.FeedManager_StateMachine">
      <summary>
            This property is used to communicate with FeedManager state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource_Component.Gateway_StateMachine">
      <summary>
            This property is used to communicate with Gateway state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource_Component.Feed_StateMachine">
      <summary>
            This property is used to communicate with Feed state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource_Component.DataSubscription_StateMachine">
      <summary>
            This property is used to communicate with DataSubscription state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource_Component.FeedSnapshot_StateMachine">
      <summary>
            This property is used to communicate with FeedSnapshot state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.FeedSource_Component.DataSubscriptionDenial_StateMachine">
      <summary>
            This property is used to communicate with DataSubscriptionDenial state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ReferentialFeedSource_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the ReferentialFeedManager component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource_Component.ReferentialFeedManager_StateMachine">
      <summary>
            This property is used to communicate with ReferentialFeedManager state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource_Component.HeartBeatRequest_StateMachine">
      <summary>
            This property is used to communicate with HeartBeatRequest state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource_Component.FeedSourceOrchestrator_StateMachine">
      <summary>
            This property is used to communicate with FeedSourceOrchestrator state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource_Component.ReferentialFeed_StateMachine">
      <summary>
            This property is used to communicate with ReferentialFeed state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ReferentialFeedSource_Component.ShutDownTimer_StateMachine">
      <summary>
            This property is used to communicate with ShutDownTimer state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Referential_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the Referential component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential_Component.Referential_StateMachine">
      <summary>
            This property is used to communicate with Referential state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential_Component.FinancialInstrument_StateMachine">
      <summary>
            This property is used to communicate with FinancialInstrument state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential_Component.InstrumentRequest_StateMachine">
      <summary>
            This property is used to communicate with InstrumentRequest state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential_Component.CustomInstrumentRequest_StateMachine">
      <summary>
            This property is used to communicate with CustomInstrumentRequest state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential_Component.ExchangeReferentialImport_StateMachine">
      <summary>
            This property is used to communicate with ExchangeReferentialImport state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential_Component.ExchangeImportError_StateMachine">
      <summary>
            This property is used to communicate with ExchangeImportError state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential_Component.QuickSearch_StateMachine">
      <summary>
            This property is used to communicate with QuickSearch state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Referential_Component.ImportManager_StateMachine">
      <summary>
            This property is used to communicate with ImportManager state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.CheckOrder_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the CheckComponent component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.CheckOrder_Component.CheckComponent_StateMachine">
      <summary>
            This property is used to communicate with CheckComponent state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.Pricer_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the Pricer component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Pricer_Component.Calculation_StateMachine">
      <summary>
            This property is used to communicate with Calculation state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Pricer_Component.DetailedCalculation_StateMachine">
      <summary>
            This property is used to communicate with DetailedCalculation state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.Pricer_Component.Pricer_StateMachine">
      <summary>
            This property is used to communicate with Pricer state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.OrderManagementSystem_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the OrderManagementSystem component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem_Component.OrderManagementSystem_StateMachine">
      <summary>
            This property is used to communicate with OrderManagementSystem state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem_Component.Trade_StateMachine">
      <summary>
            This property is used to communicate with Trade state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem_Component.Order_StateMachine">
      <summary>
            This property is used to communicate with Order state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.OrderManagementSystem_Component.ExchangeMidnightListener_StateMachine">
      <summary>
            This property is used to communicate with ExchangeMidnightListener state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.PerseusApi.ExchangeManager_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the ExchangeManager component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager_Component.ExchangeManager_StateMachine">
      <summary>
            This property is used to communicate with ExchangeManager state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager_Component.Exchange_StateMachine">
      <summary>
            This property is used to communicate with Exchange state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager_Component.ExchangeOpening_StateMachine">
      <summary>
            This property is used to communicate with ExchangeOpening state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager_Component.Error_StateMachine">
      <summary>
            This property is used to communicate with Error state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager_Component.ExchangeError_StateMachine">
      <summary>
            This property is used to communicate with ExchangeError state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager_Component.ExchangeLoading_StateMachine">
      <summary>
            This property is used to communicate with ExchangeLoading state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager_Component.TimeZone_StateMachine">
      <summary>
            This property is used to communicate with TimeZone state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager_Component.ExchangeDisabling_StateMachine">
      <summary>
            This property is used to communicate with ExchangeDisabling state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.PerseusApi.ExchangeManager_Component.ExchangeMidnight_StateMachine">
      <summary>
            This property is used to communicate with ExchangeMidnight state machine
             <para></para></summary>
    </member>
    <member name="T:XComponent.Perseus.XcAppApi.XcAppApi">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.XcAppApi.Dispose">
      <summary>
            Dispose the Client Api and the communication layer
             </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppApi.Research_Component">
      <summary>
            This property is used to communicate with Research
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppApi.FeedSource_Component">
      <summary>
            This property is used to communicate with FeedSource
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppApi.OrderManagementSystem_Component">
      <summary>
            This property is used to communicate with OrderManagementSystem
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppApi.XcAppMetricsPublisher_Component">
      <summary>
            This property is used to communicate with XcAppMetricsPublisher
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppApi.CloseConnectionOnDispose">
      <summary>
            The RabbitMq connection is shared by all client Apis instances. 
             <para>When a client Api is disposed,  the RabbitMq thread is destroyed for all instances.</para><para>If you have several instances of your api set this property to false or use the helper ApiInstancesManager ()</para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppApi.PrivateCommunicationIdentifier">
      <summary>
            Use this property to set a specific private topic.
             <para>Warning: The topic should be set before client Api initialization.</para><para>This topic is used to send private events.</para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppApi.TimeOut">
      <summary>
            Set TimeOut (in mms) for retrieving EntryPoint
             <para>Default value is: 10000</para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppApi.CommunicationType">
      <summary>
            Returns the type of communication
             <para>Possible values: BUS, IN_MEMORY, WEB_SOCKET</para></summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.Research.IResearchSettings_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ResearchSettings state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.Research.IResearchSettings_StateMachine.Publishing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.Research.IResearchSettings_StateMachine.Disposing_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.Research.ResearchSettings_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ResearchSettings state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.Research.ResearchSettings_StateMachine.Publishing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.Research.ResearchSettings_StateMachine.Disposing_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.XcAppApi.Research.ResearchSettings_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the ResearchSettings state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.Research.IResearchCache_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ResearchCache state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.Research.IResearchCache_StateMachine.EntryPoint_State">
      <summary>
            Research cache entry point
             </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.Research.IResearchCache_StateMachine.Initializing_State">
      <summary>
            Initialize connections to db and external data sources by using the Perseus lib
             </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.Research.IResearchCache_StateMachine.Initialized_State">
      <summary>
            The cache is available to receive queries such as GetLatestResearch or GetResearchDocument
             </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.Research.IResearchCache_StateMachine.Error_State">
      <summary>
            Init or update failed. Therefore, the research cache is unvailable (error status)
             </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.Research.ResearchCache_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of ResearchCache state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.Research.ResearchCache_StateMachine.EntryPoint_State">
      <summary>
            Research cache entry point
             </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.Research.ResearchCache_StateMachine.Initializing_State">
      <summary>
            Initialize connections to db and external data sources by using the Perseus lib
             </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.Research.ResearchCache_StateMachine.Initialized_State">
      <summary>
            The cache is available to receive queries such as GetLatestResearch or GetResearchDocument
             </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.Research.ResearchCache_StateMachine.Error_State">
      <summary>
            Init or update failed. Therefore, the research cache is unvailable (error status)
             </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.FeedSource.IGatewaySettings_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of GatewaySettings state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.FeedSource.IGatewaySettings_StateMachine.Publishing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.FeedSource.IGatewaySettings_StateMachine.Disposing_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.FeedSource.GatewaySettings_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of GatewaySettings state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.FeedSource.GatewaySettings_StateMachine.Publishing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.FeedSource.GatewaySettings_StateMachine.Disposing_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.XcAppApi.FeedSource.GatewaySettings_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the GatewaySettings state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.FeedSource.IFeedManager_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of FeedManager state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.FeedSource.IFeedManager_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.FeedSource.IFeedManager_StateMachine.Initializing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.FeedSource.IFeedManager_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.FeedSource.IFeedManager_StateMachine.Up_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.FeedSource.IFeedManager_StateMachine.PendingReferential_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.FeedSource.IFeedManager_StateMachine.NoReferential_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.FeedSource.FeedManager_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of FeedManager state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.FeedSource.FeedManager_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.FeedSource.FeedManager_StateMachine.Initializing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.FeedSource.FeedManager_StateMachine.Error_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.FeedSource.FeedManager_StateMachine.Up_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.FeedSource.FeedManager_StateMachine.PendingReferential_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.FeedSource.FeedManager_StateMachine.NoReferential_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.OrderManagementSystem.IOmsSettings_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of OmsSettings state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem.IOmsSettings_StateMachine.Publishing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem.IOmsSettings_StateMachine.Disposing_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.OrderManagementSystem.OmsSettings_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of OmsSettings state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem.OmsSettings_StateMachine.Publishing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem.OmsSettings_StateMachine.Disposing_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.XcAppApi.OrderManagementSystem.OmsSettings_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the OmsSettings state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of OrderManagementSystem state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.Initializing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.Up_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.OnError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.Down_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.ShuttingDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem.IOrderManagementSystem_StateMachine.Disconnected_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.OrderManagementSystem.OrderManagementSystem_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of OrderManagementSystem state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem.OrderManagementSystem_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem.OrderManagementSystem_StateMachine.Initializing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem.OrderManagementSystem_StateMachine.Up_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem.OrderManagementSystem_StateMachine.OnError_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem.OrderManagementSystem_StateMachine.Down_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem.OrderManagementSystem_StateMachine.ShuttingDown_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem.OrderManagementSystem_StateMachine.Disconnected_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.ISessions_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Sessions state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.ISessions_StateMachine.RetrievingSessions_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.Sessions_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of Sessions state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.Sessions_StateMachine.RetrievingSessions_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.Sessions_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the Sessions state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.ISqlServer_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of SqlServer state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.ISqlServer_StateMachine.Publishing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.ISqlServer_StateMachine.Disposing_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.SqlServer_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of SqlServer state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.SqlServer_StateMachine.Publishing_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.SqlServer_StateMachine.Disposing_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.SqlServer_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the SqlServer state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.IOrdersCounter_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of OrdersCounter state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.IOrdersCounter_StateMachine.RetrievingOrders_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.OrdersCounter_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of OrdersCounter state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.OrdersCounter_StateMachine.RetrievingOrders_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.OrdersCounter_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the OrdersCounter state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.ITradesCounter_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of TradesCounter state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.ITradesCounter_StateMachine.RetrievingTrades_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.TradesCounter_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of TradesCounter state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.TradesCounter_StateMachine.RetrievingTrades_State">
      <summary>
      </summary>
    </member>
    <member name="E:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.TradesCounter_StateMachine.InstanceUpdated">
      <summary>
            This event is triggered when the TradesCounter state machine is updated
            </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.IXcAppPublisher_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of XcAppPublisher state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.IXcAppPublisher_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.IXcAppPublisher_StateMachine.Up_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.XcAppPublisher_StateMachine.GetSnapshot(System.String,System.Int32)">
      <summary>
            Retrieves a snapshot of XcAppPublisher state machines
             </summary>
      <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
      <param name="timeout">Snapshot timeout</param>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.XcAppPublisher_StateMachine.EntryPoint_State">
      <summary>
      </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher.XcAppPublisher_StateMachine.Up_State">
      <summary>
      </summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.IResearch_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the ResearchCache component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.IResearch_Component.ResearchSettings_StateMachine">
      <summary>
            This property is used to communicate with ResearchSettings state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.IResearch_Component.ResearchCache_StateMachine">
      <summary>
            This property is used to communicate with ResearchCache state machine
             <para>The research cache is managing the research db. 3 differents states: Initializing, Initialized and error</para></summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.IFeedSource_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the FeedManager component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.IFeedSource_Component.GatewaySettings_StateMachine">
      <summary>
            This property is used to communicate with GatewaySettings state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.IFeedSource_Component.FeedManager_StateMachine">
      <summary>
            This property is used to communicate with FeedManager state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.IOrderManagementSystem_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the OrderManagementSystem component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.IOrderManagementSystem_Component.OmsSettings_StateMachine">
      <summary>
            This property is used to communicate with OmsSettings state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.IOrderManagementSystem_Component.OrderManagementSystem_StateMachine">
      <summary>
            This property is used to communicate with OrderManagementSystem state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.IXcAppMetricsPublisher_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the XcAppPublisher component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.IXcAppMetricsPublisher_Component.Sessions_StateMachine">
      <summary>
            This property is used to communicate with Sessions state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.IXcAppMetricsPublisher_Component.SqlServer_StateMachine">
      <summary>
            This property is used to communicate with SqlServer state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.IXcAppMetricsPublisher_Component.OrdersCounter_StateMachine">
      <summary>
            This property is used to communicate with OrdersCounter state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.IXcAppMetricsPublisher_Component.TradesCounter_StateMachine">
      <summary>
            This property is used to communicate with TradesCounter state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.IXcAppMetricsPublisher_Component.XcAppPublisher_StateMachine">
      <summary>
            This property is used to communicate with XcAppPublisher state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.Research_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the ResearchCache component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.Research_Component.ResearchSettings_StateMachine">
      <summary>
            This property is used to communicate with ResearchSettings state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.Research_Component.ResearchCache_StateMachine">
      <summary>
            This property is used to communicate with ResearchCache state machine
             <para>The research cache is managing the research db. 3 differents states: Initializing, Initialized and error</para></summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.FeedSource_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the FeedManager component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.FeedSource_Component.GatewaySettings_StateMachine">
      <summary>
            This property is used to communicate with GatewaySettings state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.FeedSource_Component.FeedManager_StateMachine">
      <summary>
            This property is used to communicate with FeedManager state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.OrderManagementSystem_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the OrderManagementSystem component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem_Component.OmsSettings_StateMachine">
      <summary>
            This property is used to communicate with OmsSettings state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.OrderManagementSystem_Component.OrderManagementSystem_StateMachine">
      <summary>
            This property is used to communicate with OrderManagementSystem state machine
             <para></para></summary>
    </member>
    <member name="M:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher_Component.GetEntryPoint">
      <summary>
            Retrieves the entry point of the XcAppPublisher component
             </summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher_Component.Sessions_StateMachine">
      <summary>
            This property is used to communicate with Sessions state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher_Component.SqlServer_StateMachine">
      <summary>
            This property is used to communicate with SqlServer state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher_Component.OrdersCounter_StateMachine">
      <summary>
            This property is used to communicate with OrdersCounter state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher_Component.TradesCounter_StateMachine">
      <summary>
            This property is used to communicate with TradesCounter state machine
             <para></para></summary>
    </member>
    <member name="P:XComponent.Perseus.XcAppApi.XcAppMetricsPublisher_Component.XcAppPublisher_StateMachine">
      <summary>
            This property is used to communicate with XcAppPublisher state machine
             <para></para></summary>
    </member>
  </members>
</doc>