// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace XCClientSender
{
    using System;
    using System.Xml;
    using System.IO;
    using System.Diagnostics;
    using System.Linq;
    using System.Collections;
    using System.Collections.Generic;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class XCClientSender : XCClientSenderBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write(" \r\n//Autogenerated File\r\n");
            
            #line 14 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

//Open XML File
var doc = new XmlDocument();	
var xmlmanager = new XmlNamespaceManager(doc.NameTable);
xmlmanager.AddNamespace("xc", "http://xcomponent.com/DeploymentConfig.xsd");
doc.Load(_xmlFile);//this.Host.ResolvePath(_xmlFile));//"OrderProcessing.xcApi"));

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 22 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

var Components = doc.SelectNodes("//xc:component", xmlmanager);
var stateMachines = doc.SelectNodes("//xc:stateMachines", xmlmanager);
var subscribeNodes = doc.SelectNodes("//xc:subscribe[@eventType='UPDATE']", xmlmanager);
var publishNodes = doc.SelectNodes("//xc:publish", xmlmanager);
var states = doc.SelectNodes("//xc:states", xmlmanager);

            
            #line default
            #line hidden
            this.Write("\r\nusing System;\r\nusing XCClientLib.Builder;\r\nusing XCClientLib.Common;\r\nusing XCC" +
                    "lientLib.RabbitMQ;\r\n\r\nnamespace XCClientLib\r\n{\r\n\tpublic class XClientSender : ID" +
                    "isposable\r\n\t{\r\n\t\tprivate IXComponentApi iApi;\r\n\t\tprivate string deploymentFile;\r" +
                    "\n\r\n");
            
            #line 42 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

string componentName = "";
string componentType = "";

foreach(System.Xml.XmlElement Component in Components)
{
	componentType = Component.Attributes["name"].Value + "_Component";


            
            #line default
            #line hidden
            this.Write("\t\tpublic ");
            
            #line 50 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(componentType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 50 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(componentType));
            
            #line default
            #line hidden
            this.Write(" { get; protected set; }\r\n");
            
            #line 51 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

}

            
            #line default
            #line hidden
            this.Write("\t\t\r\n\t\tpublic XClientSender(string deploymentFile)\r\n\t\t{\r\n\t\t\tthis.deploymentFile = " +
                    "deploymentFile;\r\n");
            
            #line 57 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

foreach(System.Xml.XmlElement Component in Components)
{
	componentType = Component.Attributes["name"].Value + "_Component";

            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 62 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(componentType));
            
            #line default
            #line hidden
            this.Write(" =  new ");
            
            #line 62 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(componentType));
            
            #line default
            #line hidden
            this.Write("();\r\n");
            
            #line 63 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
			

}

            
            #line default
            #line hidden
            this.Write("\t\r\n\t\t}\t\t\r\n\t\t\r\n\t\tpublic void Init()\r\n\t\t{\r\n\t\t\tXComponentBuilder xcBuilder = new XCo" +
                    "mponentBuilder(this.deploymentFile);\r\n\t\t\tiApi = xcBuilder.CreateApi();\r\n");
            
            #line 73 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

//Dictionary containing state machines by component
int i =0;
Dictionary<System.Xml.XmlElement, List < System.Xml.XmlElement > > StateMachinesByComponent = new Dictionary<XmlElement, List<XmlElement>>();
foreach (System.Xml.XmlElement Component in Components)
{	
	StateMachinesByComponent.Add(Component, new List<System.Xml.XmlElement>());
    foreach (System.Xml.XmlElement StateMachine in stateMachines[i])
    {
        StateMachinesByComponent[Component].Add(StateMachine);
    }
    i++;
}
ImplementApiClass(StateMachinesByComponent, subscribeNodes);

            
            #line default
            #line hidden
            this.Write("\t\t\r\n\t\tpublic void InitTopic(string privateCommunicationIdentifier){\r\n\t\t\tXComponen" +
                    "tApi.PrivateCommunicationIdentifier = privateCommunicationIdentifier;\r\n\t\t}\r\n\r\n\t\t" +
                    "public void Dispose() {\r\n\t\t\tiApi.Dispose();\r\n\t\t}\t\r\n");
            
            #line 96 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

DeclareSendAction(StateMachinesByComponent,  publishNodes, xmlmanager);
DeclareComponentInterface(StateMachinesByComponent, subscribeNodes); 
DeclareComponentClass(StateMachinesByComponent, subscribeNodes); 
DeclareStateMachineInterface(StateMachinesByComponent, subscribeNodes);
DeclareStateMachineClass(StateMachinesByComponent, subscribeNodes);
EndSpaceBlock(); 

            
            #line default
            #line hidden
            this.Write("\r\n");
            return this.GenerationEnvironment.ToString();
        }
        private global::Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost hostValue;
        /// <summary>
        /// The current host for the text templating engine
        /// </summary>
        public virtual global::Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost Host
        {
            get
            {
                return this.hostValue;
            }
            set
            {
                this.hostValue = value;
            }
        }
        
        #line 105 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

private void ImplementApiClass(Dictionary<System.Xml.XmlElement, List < System.Xml.XmlElement > > StateMachinesByComponent, XmlNodeList subscribeNodes){
		string componentName;
		string componentType;
		string communicationType;
		string stateMachineName;
		string stateMachineType;
		string stateMachineCode;
		string methodName;
		string eventName;

        foreach (var element in StateMachinesByComponent)
        {
            componentName = element.Key.Attributes["name"].Value;
            componentType = componentName + "_Component";
            foreach (var StateMachine in element.Value)
            {
                stateMachineName = StateMachine.Attributes["name"].Value;
                stateMachineType = StateMachine.Attributes["name"].Value + "_StateMachine";
                foreach (XmlNode subscribeNode in subscribeNodes)
                {
                    communicationType = subscribeNode.Attributes["communicationType"].InnerText;
                    if (communicationType == "IN_MEMORY")
                        continue;

                    eventName = subscribeNode.Attributes["event"].InnerText;
                    stateMachineCode = subscribeNode.Attributes["stateMachineCode"].Value;
                    if (stateMachineCode == StateMachine.Attributes["id"].Value
                        && eventName != string.Empty)
                    {
                        eventName = eventName.Split('.').Last();
                        methodName = "On" + (eventName).ToString() + stateMachineName + "InstanceUpdated";

        
        #line default
        #line hidden
        
        #line 137 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\t\t\tiApi.AddCallback(\"");

        
        #line default
        #line hidden
        
        #line 137 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(componentName));

        
        #line default
        #line hidden
        
        #line 137 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\",\"");

        
        #line default
        #line hidden
        
        #line 137 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(stateMachineName));

        
        #line default
        #line hidden
        
        #line 137 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\",");

        
        #line default
        #line hidden
        
        #line 137 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(componentType));

        
        #line default
        #line hidden
        
        #line 137 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(".");

        
        #line default
        #line hidden
        
        #line 137 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(stateMachineType));

        
        #line default
        #line hidden
        
        #line 137 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(".");

        
        #line default
        #line hidden
        
        #line 137 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(methodName));

        
        #line default
        #line hidden
        
        #line 137 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(");\r\n");

        
        #line default
        #line hidden
        
        #line 138 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
					}
				}
			
			}
		}

        
        #line default
        #line hidden
        
        #line 143 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\t\t}\r\n");

        
        #line default
        #line hidden
        
        #line 145 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

}

private void DeclareComponentInterface(Dictionary<System.Xml.XmlElement, List < System.Xml.XmlElement > > StateMachinesByComponent, XmlNodeList subscribeNodes)
{ 
	string componentName;
	string stateMachineType;
	string stateMachineCode;
	string eventName;

	foreach (var element in StateMachinesByComponent)
	{
		componentName = element.Key.Attributes["name"].Value +"_Component" ;

        
        #line default
        #line hidden
        
        #line 158 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\t\r\n\tpublic interface I");

        
        #line default
        #line hidden
        
        #line 159 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(componentName));

        
        #line default
        #line hidden
        
        #line 159 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(" \r\n\t{\r\n");

        
        #line default
        #line hidden
        
        #line 161 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

		foreach (var StateMachine in element.Value)
        {
			stateMachineType = StateMachine.Attributes["name"].Value + "_StateMachine";
			
			foreach (XmlNode subscribeNode in subscribeNodes)
			{
				eventName = subscribeNode.Attributes["event"].InnerText;
				stateMachineCode = subscribeNode.Attributes["stateMachineCode"].Value;
				if (stateMachineCode == StateMachine.Attributes["id"].Value
					&& eventName != string.Empty) {
				

        
        #line default
        #line hidden
        
        #line 173 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\t\t");

        
        #line default
        #line hidden
        
        #line 173 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(stateMachineType));

        
        #line default
        #line hidden
        
        #line 173 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 173 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(stateMachineType));

        
        #line default
        #line hidden
        
        #line 173 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(" { get; set; }\r\n");

        
        #line default
        #line hidden
        
        #line 174 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
			
				}
			}
		}

        
        #line default
        #line hidden
        
        #line 178 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\t}\r\n");

        
        #line default
        #line hidden
        
        #line 179 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

	}
}
private void DeclareComponentClass(Dictionary<System.Xml.XmlElement, List < System.Xml.XmlElement > > StateMachinesByComponent, XmlNodeList subscribeNodes)
{ 
	string componentName;
	string stateMachineType;
	string stateMachineCode;
	string eventName;

	foreach (var element in StateMachinesByComponent)
	{
		componentName = element.Key.Attributes["name"].Value +"_Component" ;


        
        #line default
        #line hidden
        
        #line 193 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\t\r\n\tsealed public class ");

        
        #line default
        #line hidden
        
        #line 194 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(componentName));

        
        #line default
        #line hidden
        
        #line 194 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(" : I");

        
        #line default
        #line hidden
        
        #line 194 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(componentName));

        
        #line default
        #line hidden
        
        #line 194 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(" \r\n\t{\r\n");

        
        #line default
        #line hidden
        
        #line 196 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

		foreach (var StateMachine in element.Value)
        {
			stateMachineType = StateMachine.Attributes["name"].Value + "_StateMachine";
			
			foreach (XmlNode subscribeNode in subscribeNodes)
			{
				eventName = subscribeNode.Attributes["event"].InnerText;
				stateMachineCode = subscribeNode.Attributes["stateMachineCode"].Value;
				if (stateMachineCode == StateMachine.Attributes["id"].Value
					&& eventName != string.Empty) 
				{

        
        #line default
        #line hidden
        
        #line 208 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\t\tpublic ");

        
        #line default
        #line hidden
        
        #line 208 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(stateMachineType));

        
        #line default
        #line hidden
        
        #line 208 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 208 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(stateMachineType));

        
        #line default
        #line hidden
        
        #line 208 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(" { get; set; }\r\n");

        
        #line default
        #line hidden
        
        #line 209 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
 
				}
			}
		}

        
        #line default
        #line hidden
        
        #line 213 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\r\n\t\tpublic ");

        
        #line default
        #line hidden
        
        #line 215 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(componentName));

        
        #line default
        #line hidden
        
        #line 215 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("(){\r\n");

        
        #line default
        #line hidden
        
        #line 216 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

		foreach (var StateMachine in element.Value)
        {
			stateMachineType = StateMachine.Attributes["name"].Value + "_StateMachine";
			
			foreach (XmlNode subscribeNode in subscribeNodes)
			{
				eventName = subscribeNode.Attributes["event"].InnerText;
				stateMachineCode = subscribeNode.Attributes["stateMachineCode"].Value;
				if (stateMachineCode == StateMachine.Attributes["id"].Value
					&& eventName != string.Empty) 
				{

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\t\t\t");

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(stateMachineType));

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(" = new ");

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(stateMachineType));

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("();\r\n");

        
        #line default
        #line hidden
        
        #line 229 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
 
				}
			}		
		}			

        
        #line default
        #line hidden
        
        #line 233 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\t\t}\r\n\t}\r\n");

        
        #line default
        #line hidden
        
        #line 235 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

	}
}

private void DeclareStateMachineInterface(Dictionary<System.Xml.XmlElement, List<System.Xml.XmlElement>> StateMachinesByComponent, XmlNodeList subscribeNodes)
{ 
	string stateMachineType;
	string stateMachineName;
	string stateMachineCode;
	string communicationType;
	string eventName;
	string eventNameFirst;
	string eventNameSecond;
	string methodName;
	
	foreach (var element in StateMachinesByComponent)
	{
		foreach (var StateMachine in element.Value)
        {
			stateMachineType = StateMachine.Attributes["name"].Value + "_StateMachine";
			stateMachineName = StateMachine.Attributes["name"].Value;
		
			foreach (XmlNode subscribeNode in subscribeNodes)
			{
				communicationType = subscribeNode.Attributes["communicationType"].InnerText;
				if (communicationType == "IN_MEMORY")
					continue;
				
				eventName = subscribeNode.Attributes["event"].InnerText;
				stateMachineCode = subscribeNode.Attributes["stateMachineCode"].Value;
				if (stateMachineCode == StateMachine.Attributes["id"].Value
					&& eventName != string.Empty) 
				{
					methodName = eventName.Split('.').Last() + stateMachineName; 

        
        #line default
        #line hidden
        
        #line 269 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\t\r\n\tpublic interface I");

        
        #line default
        #line hidden
        
        #line 270 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(stateMachineType));

        
        #line default
        #line hidden
        
        #line 270 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(" \r\n\t{\r\n\t\tevent System.Action<");

        
        #line default
        #line hidden
        
        #line 272 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(eventName));

        
        #line default
        #line hidden
        
        #line 272 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("> ");

        
        #line default
        #line hidden
        
        #line 272 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(methodName));

        
        #line default
        #line hidden
        
        #line 272 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(";\r\n\t\tvoid On");

        
        #line default
        #line hidden
        
        #line 273 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(methodName));

        
        #line default
        #line hidden
        
        #line 273 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("InstanceUpdated(MessageEventArgs busEvent); \r\n");

        
        #line default
        #line hidden
        
        #line 274 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

				
					endBlock();
				}
			}
		}
	}
}

private void DeclareStateMachineClass(Dictionary<System.Xml.XmlElement, List<System.Xml.XmlElement>> StateMachinesByComponent, XmlNodeList subscribeNodes)
{ 
	string stateMachineType;
	string stateMachineName;
	string stateMachineCode; 
	string communicationType;
	string eventName;
	string methodName;

	foreach (var element in StateMachinesByComponent)
	{
		foreach (var StateMachine in element.Value)
        {
			stateMachineType = StateMachine.Attributes["name"].Value + "_StateMachine";
			stateMachineName = StateMachine.Attributes["name"].Value;
		
			foreach (XmlNode subscribeNode in subscribeNodes)
			{
				communicationType = subscribeNode.Attributes["communicationType"].InnerText;
				if (communicationType == "IN_MEMORY")
					continue;
				
				eventName = subscribeNode.Attributes["event"].InnerText;
				stateMachineCode = subscribeNode.Attributes["stateMachineCode"].Value;
				if (stateMachineCode == StateMachine.Attributes["id"].Value
					&& eventName != string.Empty) 
				{
					methodName = eventName.Split('.').Last() + stateMachineName; 

        
        #line default
        #line hidden
        
        #line 311 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\t\r\n\tpublic sealed class ");

        
        #line default
        #line hidden
        
        #line 312 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(stateMachineType));

        
        #line default
        #line hidden
        
        #line 312 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(" : I");

        
        #line default
        #line hidden
        
        #line 312 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(stateMachineType));

        
        #line default
        #line hidden
        
        #line 312 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\r\n\t{\r\n\t\tpublic event System.Action<");

        
        #line default
        #line hidden
        
        #line 314 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(eventName));

        
        #line default
        #line hidden
        
        #line 314 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("> ");

        
        #line default
        #line hidden
        
        #line 314 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(methodName));

        
        #line default
        #line hidden
        
        #line 314 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(";\r\n\t\tpublic void On");

        
        #line default
        #line hidden
        
        #line 315 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(methodName));

        
        #line default
        #line hidden
        
        #line 315 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("InstanceUpdated(MessageEventArgs busEvent) {\r\n\t\t\tif( ");

        
        #line default
        #line hidden
        
        #line 316 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(methodName));

        
        #line default
        #line hidden
        
        #line 316 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(" != null ){ \r\n\t\t\t\tvar publicMember = busEvent.MessageReceived as ");

        
        #line default
        #line hidden
        
        #line 317 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(eventName));

        
        #line default
        #line hidden
        
        #line 317 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(";\r\n\t\t\t\tif( publicMember != null ) ");

        
        #line default
        #line hidden
        
        #line 318 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(methodName));

        
        #line default
        #line hidden
        
        #line 318 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("(publicMember);\r\n\t\t\t}\r\n\t\t}\r\n");

        
        #line default
        #line hidden
        
        #line 321 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
					endBlock();
				}
			}

		}
	}
}

private void DeclareSendAction(Dictionary<System.Xml.XmlElement, List<System.Xml.XmlElement>> StateMachinesByComponent, XmlNodeList  publishNodes, XmlNamespaceManager xmlmanager)
{
	string communicationType;
	string eventName;
	string eventNameFirst;
	string eventNameSecond;
	string eventNameEnd;
	string eventCode;
	string methodName;
	List<string> eventRedundancy = new List<string>();
	
	foreach (var element in StateMachinesByComponent)
	{
		string componentName = element.Key.Attributes["name"].Value;
		List<string> eventCodes = new List<string>() ;

		foreach (var StateMachine in element.Value)
        {
			foreach (XmlNode publishNode in publishNodes)
			{
				communicationType = publishNode.Attributes["communicationType"].InnerText;
				if (communicationType == "IN_MEMORY")
					continue;

				if (element.Key.Attributes["id"].Value == publishNode.Attributes["componentCode"].Value)
				{
					eventName = publishNode.Attributes["event"].InnerText;
					eventCode = publishNode.Attributes["eventCode"].InnerText;
					eventNameFirst = (eventName.Split('.')).FirstOrDefault();
					eventNameSecond = (eventName.Split('.'))[1];
					//Check if Event is called once and part of XC.Component.Userobject
					if (!eventCodes.Contains(eventCode) 
						&& eventName != string.Empty 
						&& eventNameFirst == "XComponent" && eventNameSecond != "Common") 
					{
						eventNameEnd = (eventName.Split('.')).Last();
						eventCodes.Add(eventCode);
						methodName = StateMachine.Attributes["name"].Value; 
						var runtimetmp1 = (publishNode.SelectSingleNode("xc:topic", xmlmanager).InnerXml);
						var runtimetmp2 =  runtimetmp1.Split('.');
						string runtime = runtimetmp2[runtimetmp2.Length - 3];
						//Check if same sendEvent name used if different components
						if(!eventRedundancy.Contains(eventNameEnd))
                        {
							eventRedundancy.Add(eventNameEnd);

        
        #line default
        #line hidden
        
        #line 374 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\t\t\r\n\t\tpublic void Send");

        
        #line default
        #line hidden
        
        #line 375 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(eventNameEnd));

        
        #line default
        #line hidden
        
        #line 375 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 375 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(eventName));

        
        #line default
        #line hidden
        
        #line 375 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(" obj, Visibility visibility)\r\n\t\t{\r\n\t\t\tiApi.SendEvent(\"");

        
        #line default
        #line hidden
        
        #line 377 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(runtime));

        
        #line default
        #line hidden
        
        #line 377 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\",\"");

        
        #line default
        #line hidden
        
        #line 377 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(componentName));

        
        #line default
        #line hidden
        
        #line 377 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\", \"");

        
        #line default
        #line hidden
        
        #line 377 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(methodName));

        
        #line default
        #line hidden
        
        #line 377 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\",");

        
        #line default
        #line hidden
        
        #line 377 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(eventCode));

        
        #line default
        #line hidden
        
        #line 377 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(",\"");

        
        #line default
        #line hidden
        
        #line 377 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(eventName));

        
        #line default
        #line hidden
        
        #line 377 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\", obj, visibility);\r\n\t\t}\r\n");

        
        #line default
        #line hidden
        
        #line 379 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

                        }
						else
						{

        
        #line default
        #line hidden
        
        #line 383 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\t\t\r\n\t\tpublic void Send");

        
        #line default
        #line hidden
        
        #line 384 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(eventNameEnd));

        
        #line default
        #line hidden
        
        #line 384 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(componentName));

        
        #line default
        #line hidden
        
        #line 384 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 384 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(eventName));

        
        #line default
        #line hidden
        
        #line 384 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(" obj, Visibility visibility)\r\n\t\t{\r\n\t\t\tiApi.SendEvent(\"");

        
        #line default
        #line hidden
        
        #line 386 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(runtime));

        
        #line default
        #line hidden
        
        #line 386 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\",\"");

        
        #line default
        #line hidden
        
        #line 386 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(componentName));

        
        #line default
        #line hidden
        
        #line 386 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\", \"");

        
        #line default
        #line hidden
        
        #line 386 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(methodName));

        
        #line default
        #line hidden
        
        #line 386 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\",");

        
        #line default
        #line hidden
        
        #line 386 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(eventCode));

        
        #line default
        #line hidden
        
        #line 386 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(",\"");

        
        #line default
        #line hidden
        
        #line 386 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(eventName));

        
        #line default
        #line hidden
        
        #line 386 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\", obj, visibility);\r\n\t\t}\r\n");

        
        #line default
        #line hidden
        
        #line 388 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

                        }
					}
				}
			}
		}
	}

        
        #line default
        #line hidden
        
        #line 395 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\t}\r\n");

        
        #line default
        #line hidden
        
        #line 397 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

}

private void EndSpaceBlock(){

        
        #line default
        #line hidden
        
        #line 401 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("}\r\n");

        
        #line default
        #line hidden
        
        #line 403 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

}
private void endBlock(){

        
        #line default
        #line hidden
        
        #line 406 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"
this.Write("\t}\r\n");

        
        #line default
        #line hidden
        
        #line 408 "C:\Users\yahya.najar\Documents\Visual Studio 2015\Projects\XCClient - Copie\XCClientSender\XCClientSender\XCClientSender.tt"

}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public class XCClientSenderBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
