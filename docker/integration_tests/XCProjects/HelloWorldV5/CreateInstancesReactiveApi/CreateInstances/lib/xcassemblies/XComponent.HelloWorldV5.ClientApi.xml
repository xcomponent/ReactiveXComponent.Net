<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>XComponent.HelloWorldV5.ClientApi</name>
    </assembly>
    <members>
        <member name="T:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorldV5Api">
            <summary />
        </member>
        <member name="P:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorldV5Api.HelloWorld_Component">
            <summary>
            This property is used to communicate with HelloWorld
             <para /></summary>
        </member>
        <member name="P:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorldV5Api.CloseConnectionOnDispose">
            <summary>
            The RabbitMq connection is shared by all client Apis instances. 
             <para>When a client Api is disposed,  the RabbitMq thread is destroyed for all instances.</para><para>If you have several instances of your api set this property to false or use the helper ApiInstancesManager ()</para></summary>
        </member>
        <member name="P:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorldV5Api.PrivateCommunicationIdentifier">
            <summary>
            Use this property to set a specific private topic.
             <para>Warning: The topic should be set before client Api initialization.</para><para>This topic is used to send private events.</para></summary>
        </member>
        <member name="P:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorldV5Api.TimeOut">
            <summary>
            Set TimeOut (in mms) for retrieving EntryPoint
             <para>Default value is: 10000</para></summary>
        </member>
        <member name="P:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorldV5Api.CommunicationType">
            <summary>
            Returns the type of communication
             <para>Possible values: BUS, IN_MEMORY, WEB_SOCKET</para></summary>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorldV5Api.Dispose">
            <summary>
            Dispose the Client Api and the communication layer
             </summary>
        </member>
        <member name="P:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IHelloWorld_StateMachine.EntryPoint_State">
            <summary />
        </member>
        <member name="P:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IHelloWorld_StateMachine.Listening_State">
            <summary />
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IHelloWorld_StateMachine.GetSnapshot(System.String,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Retrieves a snapshot of HelloWorld state machines
             </summary>
            <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
            <param name="timeout">Snapshot timeout</param>
            <param name="chunkSize">Maximum number of items to be sent by the server in every snapshot chunk or <code>null</code> or 0 if unlimited</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IHelloWorld_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.HelloWorld.UserObject.CreateListener,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.CreateListener event using a context. 
            </summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="transitionEvent" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
            <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IHelloWorld_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.HelloWorld.UserObject.SayHello,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.SayHello event using a context. 
            </summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="transitionEvent" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
            <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IHelloWorld_StateMachine.SendEvent(XComponent.HelloWorld.UserObject.CreateListener,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.CreateListener event
            </summary>
            <param name="evt" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
            <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IHelloWorld_StateMachine.SendEvent(XComponent.HelloWorld.UserObject.SayHello,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.SayHello event
            </summary>
            <param name="evt" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
            <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
        </member>
        <member name="P:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorld_StateMachine.EntryPoint_State">
            <summary />
        </member>
        <member name="P:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorld_StateMachine.Listening_State">
            <summary />
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorld_StateMachine.GetSnapshot(System.String,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Retrieves a snapshot of HelloWorld state machines
             </summary>
            <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
            <param name="timeout">Snapshot timeout</param>
            <param name="chunkSize">Maximum number of items to be sent by the server in every snapshot chunk or <code>null</code> or 0 if unlimited</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorld_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.HelloWorld.UserObject.CreateListener,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.CreateListener event using a context. 
            </summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="transitionEvent" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
            <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorld_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.HelloWorld.UserObject.SayHello,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.SayHello event using a context. 
            </summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="transitionEvent" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
            <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorld_StateMachine.SendEvent(XComponent.HelloWorld.UserObject.CreateListener,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.CreateListener event
            </summary>
            <param name="evt" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
            <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorld_StateMachine.SendEvent(XComponent.HelloWorld.UserObject.SayHello,System.Action{System.Exception},XCClientAPICommon.Client.Visibility,System.String)">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.SayHello event
            </summary>
            <param name="evt" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
            <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
        </member>
        <member name="E:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorld_StateMachine.InstanceUpdated">
            <summary>
            This event is triggered when the HelloWorld state machine is updated
            </summary>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorld.IListening_State.CreateListener(XComponent.Common.ApiContext.Context,XComponent.HelloWorld.UserObject.CreateListener,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.CreateListener event using a context. 
            </summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="transitionEvent" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
            <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorld.IListening_State.SayHello(XComponent.Common.ApiContext.Context,XComponent.HelloWorld.UserObject.SayHello,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.SayHello event using a context. 
            </summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="transitionEvent" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
            <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorld.IListening_State.CreateListener(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
            <summary>
            Triggers the CreateListener transition using a context. 
             <para /></summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
            <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorld.IListening_State.SayHello(XComponent.Common.ApiContext.Context,System.Action{System.Exception},XCClientAPICommon.Client.Visibility)">
            <summary>
            Triggers the SayHello transition using a context. 
             <para /></summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
            <param name="visibility">If parameter is set to Visibility.Private, the event will be sent with a private topic.</param>
        </member>
        <member name="P:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IResponseListener_StateMachine.Up_State">
            <summary />
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IResponseListener_StateMachine.GetSnapshot(System.String,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Retrieves a snapshot of ResponseListener state machines
             </summary>
            <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
            <param name="timeout">Snapshot timeout</param>
            <param name="chunkSize">Maximum number of items to be sent by the server in every snapshot chunk or <code>null</code> or 0 if unlimited</param>
        </member>
        <member name="P:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.ResponseListener_StateMachine.Up_State">
            <summary />
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.ResponseListener_StateMachine.GetSnapshot(System.String,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Retrieves a snapshot of ResponseListener state machines
             </summary>
            <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
            <param name="timeout">Snapshot timeout</param>
            <param name="chunkSize">Maximum number of items to be sent by the server in every snapshot chunk or <code>null</code> or 0 if unlimited</param>
        </member>
        <member name="E:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.ResponseListener_StateMachine.InstanceUpdated">
            <summary>
            This event is triggered when the ResponseListener state machine is updated
            </summary>
        </member>
        <member name="P:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IHelloWorldResponse_StateMachine.Published_State">
            <summary />
        </member>
        <member name="P:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IHelloWorldResponse_StateMachine.Gone_State">
            <summary />
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IHelloWorldResponse_StateMachine.GetSnapshot(System.String,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Retrieves a snapshot of HelloWorldResponse state machines
             </summary>
            <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
            <param name="timeout">Snapshot timeout</param>
            <param name="chunkSize">Maximum number of items to be sent by the server in every snapshot chunk or <code>null</code> or 0 if unlimited</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IHelloWorldResponse_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.HelloWorld.UserObject.Kill,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.Kill event using a context. 
            </summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="transitionEvent" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IHelloWorldResponse_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.HelloWorld.UserObject.Ping,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.Ping event using a context. 
            </summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="transitionEvent" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IHelloWorldResponse_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.HelloWorld.UserObject.SayGoodbyeToAll,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.SayGoodbyeToAll event using a context. 
            </summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="transitionEvent" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IHelloWorldResponse_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.HelloWorld.UserObject.SayGoodbye,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.SayGoodbye event using a context. 
            </summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="transitionEvent" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IHelloWorldResponse_StateMachine.SendEvent(XComponent.HelloWorld.UserObject.Kill,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.Kill event
            </summary>
            <param name="evt" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IHelloWorldResponse_StateMachine.SendEvent(XComponent.HelloWorld.UserObject.Ping,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.Ping event
            </summary>
            <param name="evt" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IHelloWorldResponse_StateMachine.SendEvent(XComponent.HelloWorld.UserObject.SayGoodbye,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.SayGoodbye event
            </summary>
            <param name="evt" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.IHelloWorldResponse_StateMachine.SendEvent(XComponent.HelloWorld.UserObject.SayGoodbyeToAll,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.SayGoodbyeToAll event
            </summary>
            <param name="evt" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="P:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse_StateMachine.Published_State">
            <summary />
        </member>
        <member name="P:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse_StateMachine.Gone_State">
            <summary />
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse_StateMachine.GetSnapshot(System.String,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Retrieves a snapshot of HelloWorldResponse state machines
             </summary>
            <param name="filter">This parameter is used to filter the snapshot request with a linq expression. The linq expression is applied to the public member</param>
            <param name="timeout">Snapshot timeout</param>
            <param name="chunkSize">Maximum number of items to be sent by the server in every snapshot chunk or <code>null</code> or 0 if unlimited</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.HelloWorld.UserObject.Kill,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.Kill event using a context. 
            </summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="transitionEvent" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.HelloWorld.UserObject.Ping,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.Ping event using a context. 
            </summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="transitionEvent" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.HelloWorld.UserObject.SayGoodbyeToAll,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.SayGoodbyeToAll event using a context. 
            </summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="transitionEvent" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse_StateMachine.SendEvent(XComponent.Common.ApiContext.Context,XComponent.HelloWorld.UserObject.SayGoodbye,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.SayGoodbye event using a context. 
            </summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="transitionEvent" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse_StateMachine.SendEvent(XComponent.HelloWorld.UserObject.Kill,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.Kill event
            </summary>
            <param name="evt" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse_StateMachine.SendEvent(XComponent.HelloWorld.UserObject.Ping,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.Ping event
            </summary>
            <param name="evt" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse_StateMachine.SendEvent(XComponent.HelloWorld.UserObject.SayGoodbye,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.SayGoodbye event
            </summary>
            <param name="evt" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse_StateMachine.SendEvent(XComponent.HelloWorld.UserObject.SayGoodbyeToAll,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.SayGoodbyeToAll event
            </summary>
            <param name="evt" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="E:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse_StateMachine.InstanceUpdated">
            <summary>
            This event is triggered when the HelloWorldResponse state machine is updated
            </summary>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse.IPublished_State.Kill(XComponent.Common.ApiContext.Context,XComponent.HelloWorld.UserObject.Kill,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.Kill event using a context. 
            </summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="transitionEvent" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse.IPublished_State.Ping(XComponent.Common.ApiContext.Context,XComponent.HelloWorld.UserObject.Ping,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.Ping event using a context. 
            </summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="transitionEvent" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse.IPublished_State.SayGoodbyeToAll(XComponent.Common.ApiContext.Context,XComponent.HelloWorld.UserObject.SayGoodbyeToAll,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.SayGoodbyeToAll event using a context. 
            </summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="transitionEvent" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse.IPublished_State.SayGoodbye(XComponent.Common.ApiContext.Context,XComponent.HelloWorld.UserObject.SayGoodbye,System.Action{System.Exception})">
            <summary>
            Sends the XComponent.HelloWorld.UserObject.SayGoodbye event using a context. 
            </summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="transitionEvent" />
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse.IPublished_State.Kill(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
            <summary>
            Triggers the Kill transition using a context. 
             <para /></summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse.IPublished_State.Ping(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
            <summary>
            Triggers the Ping transition using a context. 
             <para /></summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse.IPublished_State.SayGoodbyeToAll(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
            <summary>
            Triggers the SayGoodbyeToAll transition using a context. 
             <para /></summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
        <member name="M:XComponent.HelloWorldV5.HelloWorldV5Api.HelloWorld.HelloWorldResponse.IPublished_State.SayGoodbye(XComponent.Common.ApiContext.Context,System.Action{System.Exception})">
            <summary>
            Triggers the SayGoodbye transition using a context. 
             <para /></summary>
            <param name="context">Client Api context. Used to target a specific instance of state machine</param>
            <param name="onExceptionOccured">This event is triggered if an exception is raised. If this option is set, the exception will be catch. If this option is not set, the exception will be thrown.</param>
        </member>
    </members>
</doc>