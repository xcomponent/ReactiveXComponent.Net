////------------------------------------------------------------------------------
//// <auto-generated>
////     This code was generated by XCTools.
////     Changes to this file may cause incorrect behavior and will be lost if
////     the code is regenerated.
//// </auto-generated>
////------------------------------------------------------------------------------
using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using Akka.Actor;
using XComponent.Common.ApiContext;
using XComponent.Common.Timeouts;
using XComponent.Common.Processing;
using XComponent.Runtime.Processing;
using XComponent.Runtime.StateMachine;
using XComponent.Runtime.StateMachine.Actor.Messages;
using XComponent.Runtime.StateMachine.ExecutionResult;
using XComponent.Shared.Api;
using XComponent.Shared;
using XComponent.HelloWorld.TriggeredMethod;
using XComponent.HelloWorld.Common;
using XComponent.HelloWorld.Common.Senders;

namespace XComponent.HelloWorld.StateMachine
{
    public class HelloWorldResponse : StateMachineBase<XComponent.HelloWorld.UserObject.HelloWorldResponse, object, HelloWorldResponse>
    {
        static HelloWorldResponse()
        {
            ExecutionMap[1,12] = new StandardExecutionResult<XComponent.HelloWorld.UserObject.HelloWorldResponse, object>(0, true);
            ExecutionMap[1,14] = new StandardExecutionResult<XComponent.HelloWorld.UserObject.HelloWorldResponse, object>(1, false, ExecuteOn_Published_From_Published_Through_Ping);
            ExecutionMap[1,18] = new StandardExecutionResult<XComponent.HelloWorld.UserObject.HelloWorldResponse, object>(1, false, ExecuteOn_Published_From_Published_Through_SayGoodbye);
            ExecutionMap[1,19] = new StandardExecutionResult<XComponent.HelloWorld.UserObject.HelloWorldResponse, object>(1, false, ExecuteOn_Published_From_Published_Through_SayGoodbyeToAll);

			RuleMap[1,19] = new RuleToCheck<XComponent.HelloWorld.UserObject.HelloWorldResponse, object>(CheckRule_Published_From_Published_Through_SayGoodbyeToAll_WithId_9);

            StateHashCodeCalculators[1] = new XComponent.HelloWorld.Common.StateHashCodeCalculator.HelloWorldResponse.PublishedStateHashCodeCalculator();
            StateHashCodeCalculators[0] = new XComponent.HelloWorld.Common.StateHashCodeCalculator.HelloWorldResponse.GoneStateHashCodeCalculator();
        }

        public HelloWorldResponse() : base((int)StdEnum.HelloWorldResponse, ComponentHelper.COMPONENT_NAME, ComponentHelper.COMPONENT_CODE)
        {

        }

        protected override void InitialiseStateMachine(int triggeringEvent, int initialStateCode)
		{
			NextTriggeredMethodToExecute = GetInitNextTriggeredMethodToExecute(triggeringEvent, initialStateCode);
		}

        public override object ClonePublicMember()
        {
            return XCClone.Clone<XComponent.HelloWorld.UserObject.HelloWorldResponse>(TypedPublicMember);
        }

		private TriggeredMethodToExecute<XComponent.HelloWorld.UserObject.HelloWorldResponse, object> GetInitNextTriggeredMethodToExecute(int triggeringEvent, int initialStateCode)
		{
			switch(initialStateCode)
			{
				case 1 :
					switch(triggeringEvent)
					{
						case 20 :
							return ExecuteOn_Published_From_Listening_Through_SayHello;
					}
			        break;
			}

			return null;
		}

		protected override string ConvertStateCodeToString(int stateCode)
        {
			switch(stateCode)
			{
				case 1 :
			        return "Published";
				case 0 :
			        return "Gone";
				case -2147483648 :
			        return "FatalError";
			}

            return string.Empty;
        }
        
        protected override string ConvertStateMachineCodeToString(int stateMachineCode)
        {
			switch(stateMachineCode)
			{
				case -69981087 :
			        return "HelloWorld";
				case -1152526010 :
			        return "ResponseListener";
				case -343862282 :
			        return "HelloWorldResponse";
			}

            return string.Empty;
        }

		public static void ExecuteOn_Published_From_Published_Through_Ping(object receivedEvent, XComponent.HelloWorld.UserObject.HelloWorldResponse publicMember, object internalMember, IStateMachine stateMachine)
        {
            var context = stateMachine.Context;
			ExecuteTriggeredMethod<XComponent.HelloWorld.UserObject.Ping>(receivedEvent, context, "HelloWorldResponseTriggeredMethod.ExecuteOn_Published_Through_Ping",
				typedEvent => HelloWorldResponseTriggeredMethod.ExecuteOn_Published_Through_Ping(typedEvent, publicMember, internalMember, context, SenderManager.PingPingOnPublishedHelloWorldResponseSender),
				triggeredMethodException => TriggeredMethodContext.Instance.UnHanledException(triggeredMethodException));
        }

		public static void ExecuteOn_Published_From_Published_Through_SayGoodbye(object receivedEvent, XComponent.HelloWorld.UserObject.HelloWorldResponse publicMember, object internalMember, IStateMachine stateMachine)
        {
            var context = stateMachine.Context;
			ExecuteTriggeredMethod<XComponent.HelloWorld.UserObject.SayGoodbye>(receivedEvent, context, "HelloWorldResponseTriggeredMethod.ExecuteOn_Published_Through_SayGoodbye",
				typedEvent => HelloWorldResponseTriggeredMethod.ExecuteOn_Published_Through_SayGoodbye(typedEvent, publicMember, internalMember, context, SenderManager.SayGoodbyeSayGoodbyeOnPublishedHelloWorldResponseSender),
				triggeredMethodException => TriggeredMethodContext.Instance.UnHanledException(triggeredMethodException));
        }

		public static void ExecuteOn_Published_From_Published_Through_SayGoodbyeToAll(object receivedEvent, XComponent.HelloWorld.UserObject.HelloWorldResponse publicMember, object internalMember, IStateMachine stateMachine)
        {
            var context = stateMachine.Context;
			ExecuteTriggeredMethod<XComponent.HelloWorld.UserObject.SayGoodbyeToAll>(receivedEvent, context, "HelloWorldResponseTriggeredMethod.ExecuteOn_Published_Through_SayGoodbyeToAll",
				typedEvent => HelloWorldResponseTriggeredMethod.ExecuteOn_Published_Through_SayGoodbyeToAll(typedEvent, publicMember, internalMember, context, SenderManager.SayGoodbyeToAllSayGoodbyeToAllOnPublishedHelloWorldResponseSender),
				triggeredMethodException => TriggeredMethodContext.Instance.UnHanledException(triggeredMethodException));
        }

		public static void ExecuteOn_Published_From_Listening_Through_SayHello(object receivedEvent, XComponent.HelloWorld.UserObject.HelloWorldResponse publicMember, object internalMember, IStateMachine stateMachine)
        {
            var context = stateMachine.Context;
			ExecuteTriggeredMethod<XComponent.HelloWorld.UserObject.SayHello>(receivedEvent, context, "HelloWorldResponseTriggeredMethod.ExecuteOn_Published_Through_SayHello",
				typedEvent => HelloWorldResponseTriggeredMethod.ExecuteOn_Published_Through_SayHello(typedEvent, publicMember, internalMember, context, SenderManager.SayHelloSayHelloOnPublishedHelloWorldResponseSender),
				triggeredMethodException => TriggeredMethodContext.Instance.UnHanledException(triggeredMethodException));
        }

        public static bool CheckRule_Published_From_Published_Through_SayGoodbyeToAll_WithId_9(object receivedEvent, XComponent.HelloWorld.UserObject.HelloWorldResponse publicMember, object internalMember)
        {
            var typedEvent = receivedEvent as XComponent.HelloWorld.UserObject.SayGoodbyeToAll;
            return typedEvent.WithName == publicMember.OriginatorName;
        }

    }
}
